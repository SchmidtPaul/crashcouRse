gear <- ordered(gear)
carb <- ordered(carb)
})
mtcars <- mtcars2 %>% select(mpg, hp, am)
?str
?mtcars
library(data.table)
library(dplyr)
data(mtcars)
mtcars2 <- within(mtcars, {
vs <- factor(vs, labels = c("V", "S"))
am <- factor(am, labels = c("auto", "manu"))
gear <- ordered(gear)
carb <- ordered(carb)
})
mtcars2$cyl <- as.factor(mtcars2$cyl)
mtcars <- mtcars2 %>% select(mpg, hp, am, cyl)
install.packages("tab")
t <- tabmulti(dataset=mtcars,
xvarname="am",
yvarnames=c("mpg", "hp"),
p.include=FALSE)
library(tab)
library(tab)
t <- tabmulti(dataset=mtcars,
xvarname="am",
yvarnames=c("mpg", "hp"),
p.include=FALSE)
t
?tabmulti
install.packages("xtable")
library(tab)
t <- tabmulti(data = mtcars,
xvarname  = "am",
yvarnames = c("mpg", "hp"),
p.include=FALSE)
?mean_sd
??mean_sd
mtcarsDT <- as.data.table(mtcars) # Umwandeln in data.table Format
mtcarsDT[, mean(mpg), by=am]
library(data.table)
mtcarsDT <- as.data.table(mtcars) # Umwandeln in data.table Format
mtcarsDT[, mean(mpg), by=am]
mtcarsDT[, mean=mean(mpg), by=am]
mtcarsDT[, .(mpg, hp), by=am]
plot(mtcarsDT$mpg)
mtcars$cyl %in% c("4", "6")
mtcars$cyl == "4" | mtcars$cyl == "6"
`%not_in%` <- compose(`!`, `%in%`)
`%notin%` <- Negate(`%in%`)
mtcars %>% subset(mpg<15)
View(mtcars)
mtcars %>%
select(cyl) %>%
table(exclude=NULL
)
mtcars %>%
select(cyl) %>%
table(exclude=NULL) %>%
data.table
library(data.table)
dat <- fread("D:/RKurse/MyDatasets/drinks (other) LM.txt")
dat$Person <- as.factor(dat$Person)
cor.test(dat$drinks, dat$blood_alc)
library(data.table)
dat <- fread("D:/RKurse/MyDatasets/drinks (other) LM.txt")
dat$Person <- as.factor(dat$Person)
cor.test(dat$drinks, dat$blood_alc)
cor.test(dat$drinks, dat$blood_alc)$pval
x <- cor.test(dat$drinks, dat$blood_alc)
x$p.value
library(data.table)
library(ggplot2)
dat <- fread("D:/RKurse/MyDatasets/drinks (other) LM.txt")
library(data.table)
library(ggplot2)
dat <- fread("D:/RKurse/MyDatasets/drinks (other) LM.txt")
ggplot(data=dat, aes(y=blood_alc, x=drinks)) +
geom_point()
library(data.table)
library(ggplot2)
dat <- fread("D:/RKurse/MyDatasets/drinks (other) LM.txt")
ggplot(data=dat, aes(y=blood_alc, x=drinks)) +
geom_point() +
theme_minimal()
ggplot(data=dat, aes(y=blood_alc, x=drinks)) +
geom_point() +
theme_bw()
library(data.table)
library(ggplot2)
dat <- fread("D:/RKurse/MyDatasets/drinks (other) LM.txt")
ggplot(data=dat, aes(y=blood_alc, x=drinks)) +
geom_point() +
theme_classic()
library(data.table)
library(ggplot2)
dat <- fread("D:/RKurse/MyDatasets/drinks (other) LM.txt")
ggplot(data=dat, aes(y=blood_alc, x=drinks)) +
geom_point(size=2) +
theme_classic()
scale_x_continuous(name="Anzahl Getränke", breaks=(seq(0:9,1))
ggplot(data=dat, aes(y=blood_alc, x=drinks)) +
geom_point(size=2) +
scale_y_continuous(name="Promillewert", limits=c(0, 1.5)) +
scale_x_continuous(name="Anzahl Getränke", breaks=(seq(0:9,1))
seq(0:9,1
seq(0,9,1)
scale_y_continuous(name="Promillewert", limits=c(0, 1.5)) +
ggplot(data=dat, aes(y=blood_alc, x=drinks)) +
geom_point(size=2) +
scale_y_continuous(name="Promillewert", limits=c(0, 1.5)) +
scale_x_continuous(name="Anzahl Getränke", breaks=seq(0,9,1))
ggplot(data=dat, aes(y=blood_alc, x=drinks)) +
geom_point(size=2) +
scale_y_continuous(name="Promillewert", limits=c(0, 1.5)) +
scale_x_continuous(name="Anzahl Getränke", breaks=seq(0,9,1))
library(data.table)
library(ggplot2)
dat <- fread("D:/RKurse/MyDatasets/drinks (other) LM.txt")
ggplot(data=dat, aes(y=blood_alc, x=drinks)) +
geom_point(size=2) +
scale_y_continuous(name="Promillewert", limits=c(0, 1.5)) +
scale_x_continuous(name="Anzahl Getränke", limits=c(0,9), breaks=seq(0,9,1)) +
theme_classic()
ggplot(data=dat, aes(y=blood_alc, x=drinks)) +
geom_point(size=3) +
scale_y_continuous(name="Promillewert", limits=c(0, 1.5)) +
scale_x_continuous(name="Anzahl Getränke", limits=c(0, 9), breaks=seq(0, 9, 1)) +
theme_classic()
ggplot(data=dat, aes(y=blood_alc, x=drinks)) +
#geom_point(size=3) +
geom_dotplot(binaxis='y', stackdir='center', stackratio=1.5, dotsize=1.2) +
scale_y_continuous(name="Promillewert", limits=c(0, 1.5)) +
scale_x_continuous(name="Anzahl Getränke", limits=c(0, 9), breaks=seq(0, 9, by=1)) +
theme_classic() +
ggplot(data=dat, aes(y=blood_alc, x=drinks)) +
#geom_point(size=3) +
geom_dotplot(binaxis='y', stackdir='center', stackratio=1.5, dotsize=1.2) +
scale_y_continuous(name="Promillewert", limits=c(0, 1.5)) +
scale_x_continuous(name="Anzahl Getränke", limits=c(0, 9), breaks=seq(0, 9, by=1)) +
theme_classic() +
ggplot(data=dat, aes(y=blood_alc, x=drinks)) +
#geom_point(size=3) +
geom_dotplot(binaxis='y', stackdir='center', stackratio=1.5, dotsize=1.2) +
scale_y_continuous(name="Promillewert", limits=c(0, 1.5)) +
scale_x_continuous(name="Anzahl Getränke", limits=c(0, 9), breaks=seq(0, 9, by=1)) +
theme_classic()
ggplot(data=dat, aes(y=blood_alc, x=drinks)) +
#geom_point(size=3) +
geom_dotplot(binaxis='y', stackdir='center', stackratio=1.5, dotsize=1.2) +
scale_y_continuous(name="Promillewert", limits=c(0, 1.5)) +
scale_x_continuous(name="Anzahl Getränke", limits=c(0, 9), breaks=seq(0, 9, by=1)) +
theme_classic()
library(data.table)
library(ggplot2)
dat <- fread("D:/RKurse/MyDatasets/drinks (other) LM.txt")
ggplot(data=dat, aes(x=drinks, y=blood_alc)) +
geom_point(size=3) +
scale_y_continuous(name="Promillewert", limits=c(0, 1.5)) +
scale_x_continuous(name="Anzahl Getränke", limits=c(0, 9), breaks=seq(0, 9, by=1)) +
theme_classic() +
stat_cor(method="pearson", label.x=1, label.y=1)
geom_text()
library(data.table)
library(ggplot2)
dat <- fread("D:/RKurse/MyDatasets/drinks (other) LM.txt")
ggplot(data=dat, aes(x=drinks, y=blood_alc)) +
geom_point(size=3) +
scale_y_continuous(name="Promillewert", limits=c(0, 1.5)) +
scale_x_continuous(name="Anzahl Getränke", limits=c(0, 9), breaks=seq(0, 9, by=1)) +
theme_classic() +
stat_cor(method="pearson", label.x=1, label.y=1) +
geom_text()
library(data.table)
library(ggplot2)
dat <- fread("D:/RKurse/MyDatasets/drinks (other) LM.txt")
ggplot(data=dat, aes(x=drinks, y=blood_alc)) +
geom_point(size=3) +
scale_y_continuous(name="Promillewert", limits=c(0, 1.5)) +
scale_x_continuous(name="Anzahl Getränke", limits=c(0, 9), breaks=seq(0, 9, by=1)) +
theme_classic() +
stat_cor(method="pearson", label.x=1, label.y=1) +
geom_text()
?stat_cor
??stat_cor
install.packages("ggpubr")
library(data.table)
library(ggplot2)
library(ggpubr)
dat <- fread("D:/RKurse/MyDatasets/drinks (other) LM.txt")
ggplot(data=dat, aes(x=drinks, y=blood_alc)) +
geom_point(size=3) +
scale_y_continuous(name="Promillewert", limits=c(0, 1.5)) +
scale_x_continuous(name="Anzahl Getränke", limits=c(0, 9), breaks=seq(0, 9, by=1)) +
theme_classic() +
stat_cor(method="pearson", label.x=1, label.y=1) +
geom_text()
library(data.table)
library(ggplot2)
library(ggpubr)
dat <- fread("D:/RKurse/MyDatasets/drinks (other) LM.txt")
ggplot(data=dat, aes(x=drinks, y=blood_alc)) +
geom_point(size=3) +
scale_y_continuous(name="Promillewert", limits=c(0, 1.5)) +
scale_x_continuous(name="Anzahl Getränke", limits=c(0, 9), breaks=seq(0, 9, by=1)) +
theme_classic() +
stat_cor(method="pearson", label.x=1, label.y=1)
dat <- fread("D:/RKurse/MyDatasets/drinks (other) LM.txt")
dat$Person <- as.factor(dat$Person)
x <- cor.test(dat$drinks, dat$blood_alc)
x$conf.int
x$conf.int[1]
x$conf.int[2]
plot(y=dat$drinks, x=dat$blood_alc)
abline(reg)
reg <- lm(data = dat, formula = blood_alc ~ drinks) # Stelle Regressionsmodell auf
plot(y=dat$drinks, x=dat$blood_alc)
abline(reg)
reg$coefficients
reg$coefficients[1]
library(data.table)
library(ggplot2)
library(ggpubr)
dat <- fread("D:/RKurse/MyDatasets/drinks (other) LM.txt")
reg    <- lm(data = dat, formula = blood_alc ~ drinks)
reg_bx <- lm(data = dat, formula = blood_alc ~ 0 + drinks)
ggplot(data=dat, aes(x=drinks, y=blood_alc)) + # Definiere Daten
geom_point(size=3) + # Scatter plot mit Punkten der Größe 3
scale_x_continuous(name="Anzahl Getränke", limits=c(0, 9), breaks=seq(0, 9, by=1)) + # x-Achse
scale_y_continuous(name="Promillewert", limits=c(0, 1.5)) + # y-Achse
theme_classic() + # Simple, klassische Formatierung
stat_regline_equation(label.x=1, label.y=1) # Füge Korrelation mit p-Wert ein
library(data.table)
library(ggplot2)
library(ggpubr)
dat <- fread("D:/RKurse/MyDatasets/drinks (other) LM.txt")
reg    <- lm(data = dat, formula = blood_alc ~ drinks)
reg_bx <- lm(data = dat, formula = blood_alc ~ 0 + drinks)
ggplot(data=dat, aes(x=drinks, y=blood_alc)) + # Definiere Daten
geom_point(size=3) + # Scatter plot mit Punkten der Größe 3
scale_x_continuous(name="Anzahl Getränke", limits=c(0, 9), breaks=seq(0, 9, by=1)) + # x-Achse
scale_y_continuous(name="Promillewert", limits=c(0, 1.5)) + # y-Achse
theme_classic() + # Simple, klassische Formatierung
stat_regline_equation(formula=reg_bx, label.x=1, label.y=1) # Füge Korrelation mit p-Wert ein
library(data.table)
library(ggplot2)
library(ggpubr)
dat <- fread("D:/RKurse/MyDatasets/drinks (other) LM.txt")
reg    <- lm(data = dat, formula = blood_alc ~ drinks)
reg_bx <- lm(data = dat, formula = blood_alc ~ 0 + drinks)
ggplot(data=dat, aes(x=drinks, y=blood_alc)) + # Definiere Daten
geom_point(size=3) + # Scatter plot mit Punkten der Größe 3
scale_x_continuous(name="Anzahl Getränke", limits=c(0, 9), breaks=seq(0, 9, by=1)) + # x-Achse
scale_y_continuous(name="Promillewert", limits=c(0, 1.5)) + # y-Achse
theme_classic() + # Simple, klassische Formatierung
stat_regline_equation(label.x=1, label.y=1) # Füge Korrelation mit p-Wert ein
library(data.table)
library(ggplot2)
library(ggpubr)
dat <- fread("D:/RKurse/MyDatasets/drinks (other) LM.txt")
reg    <- lm(data = dat, formula = blood_alc ~ drinks)
reg_bx <- lm(data = dat, formula = blood_alc ~ 0 + drinks)
ggplot(data=dat, aes(x=drinks, y=blood_alc)) + # Definiere Daten
ggtitle("y = a + bx") +
geom_point(size=3) + # Scatter plot mit Punkten der Größe 3
scale_x_continuous(name="Anzahl Getränke", limits=c(0, 9), breaks=seq(0, 9, by=1)) + # x-Achse
scale_y_continuous(name="Promillewert", limits=c(0, 1.5)) + # y-Achse
theme_classic() + # Simple, klassische Formatierung
stat_regline_equation(label.x=1, label.y=1) # Füge Korrelation mit p-Wert ein
library(data.table)
library(ggplot2)
library(ggpubr)
dat <- fread("D:/RKurse/MyDatasets/drinks (other) LM.txt")
reg    <- lm(data = dat, formula = blood_alc ~ drinks)
reg_bx <- lm(data = dat, formula = blood_alc ~ 0 + drinks)
ggplot(data=dat, aes(x=drinks, y=blood_alc)) + # Definiere Daten
ggtitle("Angepasstes Modell: y = a + bx") +
geom_point(size=3) + # Scatter plot mit Punkten der Größe 3
scale_x_continuous(name="Anzahl Getränke", limits=c(0, 9), breaks=seq(0, 9, by=1)) + # x-Achse
scale_y_continuous(name="Promillewert", limits=c(0, 1.5)) + # y-Achse
theme_classic() + # Simple, klassische Formatierung
stat_regline_equation(label.x=1, label.y=1) # Füge Korrelation mit p-Wert ein
library(data.table)
library(ggplot2)
library(ggpubr)
dat <- fread("D:/RKurse/MyDatasets/drinks (other) LM.txt")
reg    <- lm(data = dat, formula = blood_alc ~ drinks)
reg_bx <- lm(data = dat, formula = blood_alc ~ 0 + drinks)
ggplot(data=dat, aes(x=drinks, y=blood_alc)) + # Definiere Daten
ggtitle("Angepasstes Modell: y = a + bx") +
geom_point(size=3) + # Scatter plot mit Punkten der Größe 3
scale_x_continuous(name="Anzahl Getränke", limits=c(0, 9), breaks=seq(0, 9, by=1)) + # x-Achse
scale_y_continuous(name="Promillewert", limits=c(0, 1.5)) + # y-Achse
theme_classic() + # Simple, klassische Formatierung
geom_smooth(method='lm',formula=y~x) +
stat_regline_equation(label.x=1, label.y=1) # Füge Korrelation mit p-Wert ein
library(data.table)
library(ggplot2)
library(ggpubr)
dat <- fread("D:/RKurse/MyDatasets/drinks (other) LM.txt")
reg    <- lm(data = dat, formula = blood_alc ~ drinks)
reg_bx <- lm(data = dat, formula = blood_alc ~ 0 + drinks)
ggplot(data=dat, aes(x=drinks, y=blood_alc)) + # Definiere Daten
ggtitle("Angepasstes Modell: y = a + bx") +
geom_point(size=3) + # Scatter plot mit Punkten der Größe 3
scale_x_continuous(name="Anzahl Getränke", limits=c(0, 9), breaks=seq(0, 9, by=1)) + # x-Achse
scale_y_continuous(name="Promillewert", limits=c(0, 1.5)) + # y-Achse
theme_classic() + # Simple, klassische Formatierung
geom_smooth(method='lm', formula=y~x, se=FALSE ) +
stat_regline_equation(label.x=1, label.y=1) # Füge Korrelation mit p-Wert ein
library(data.table)
library(ggplot2)
library(ggpubr)
dat <- fread("D:/RKurse/MyDatasets/drinks (other) LM.txt")
reg    <- lm(data = dat, formula = blood_alc ~ drinks)
reg_bx <- lm(data = dat, formula = blood_alc ~ 0 + drinks)
ggplot(data=dat, aes(x=drinks, y=blood_alc)) + # Definiere Daten
ggtitle("Angepasstes Modell: y = a + bx") + # Titel über Plot
geom_point(size=3) + # Scatter plot mit Punkten der Größe 3
scale_x_continuous(name="Anzahl Getränke", limits=c(0, 9), breaks=seq(0, 9, by=1)) + # x-Achse
scale_y_continuous(name="Promillewert", limits=c(0, 1.5)) + # y-Achse
theme_classic() + # Simple, klassische Formatierung
geom_smooth(method='lm', formula=y~x, se=FALSE ) + # Füge Gerade ein
stat_regline_equation(label.x=1, label.y=1) # Füge Gleichung ein
ggplot(data=dat, aes(x=drinks, y=blood_alc)) + # Definiere Daten
ggtitle("Angepasstes Modell: y = a + bx") + # Titel über Plot
geom_point(size=3) + # Scatter plot mit Punkten der Größe 3
scale_x_continuous(name="Anzahl Getränke", limits=c(0, 9), breaks=seq(0, 9, by=1)) + # x-Achse
scale_y_continuous(name="Promillewert", limits=c(0, 1.5)) + # y-Achse
theme_classic() + # Simple, klassische Formatierung
geom_smooth(method='lm', formula=y~0+x, se=FALSE ) + # Füge Gerade ein
stat_regline_equation(label.x=1, label.y=1) # Füge Gleichung ein
reg$call
ggplot(data=dat, aes(x=drinks, y=blood_alc)) + # Definiere Daten
ggtitle("Angepasstes Modell: y = a + bx") + # Titel über Plot
geom_point(size=3) + # Scatter plot mit Punkten der Größe 3
scale_x_continuous(name="Anzahl Getränke", limits=c(0, 9), breaks=seq(0, 9, by=1)) + # x-Achse
scale_y_continuous(name="Promillewert", limits=c(0, 1.5)) + # y-Achse
theme_classic() + # Simple, klassische Formatierung
geom_smooth(method='lm', formula=reg$call, se=FALSE ) + # Füge Gerade ein
stat_regline_equation(label.x=1, label.y=1) # Füge Gleichung ein
library(data.table)
library(ggplot2)
library(ggpubr)
dat <- fread("D:/RKurse/MyDatasets/drinks (other) LM.txt")
reg    <- lm(data = dat, formula = blood_alc ~ drinks)
reg_bx <- lm(data = dat, formula = blood_alc ~ 0 + drinks)
ggplot(data=dat, aes(x=drinks, y=blood_alc)) + # Definiere Daten
ggtitle("Angepasstes Modell: y = a + bx") + # Titel über Plot
geom_point(size=3) + # Scatter plot mit Punkten der Größe 3
scale_x_continuous(name="Anzahl Getränke", limits=c(0, 9), breaks=seq(0, 9, by=1)) + # x-Achse
scale_y_continuous(name="Promillewert", limits=c(0, 1.5)) + # y-Achse
theme_classic() + # Simple, klassische Formatierung
geom_smooth(method='lm', formula=y~x, se=FALSE ) + # Füge Gerade ein
stat_regline_equation(label.x=1, label.y=1) # Füge Gleichung ein
ggplot(data=dat, aes(x=drinks, y=blood_alc)) + # Definiere Daten
ggtitle("Angepasstes Modell: y = a + bx") + # Titel über Plot
geom_point(size=3) + # Scatter plot mit Punkten der Größe 3
scale_x_continuous(name="Anzahl Getränke", limits=c(0, 9), breaks=seq(0, 9, by=1)) + # x-Achse
scale_y_continuous(name="Promillewert", limits=c(0, 1.5)) + # y-Achse
theme_classic() + # Simple, klassische Formatierung
geom_smooth(method='lm', formula=reg$call$formula, se=FALSE ) + # Füge Gerade ein
stat_regline_equation(label.x=1, label.y=1) # Füge Gleichung ein
ggplot(data=dat, aes(x=drinks, y=blood_alc)) + # Definiere Daten
ggtitle("Angepasstes Modell: y = a + bx") + # Titel über Plot
geom_point(size=3) + # Scatter plot mit Punkten der Größe 3
scale_x_continuous(name="Anzahl Getränke", limits=c(0, 9), breaks=seq(0, 9, by=1)) + # x-Achse
scale_y_continuous(name="Promillewert", limits=c(0, 1.5)) + # y-Achse
theme_classic() + # Simple, klassische Formatierung
geom_smooth(method='lm', formula=y~0+x, se=FALSE ) + # Füge Gerade ein
stat_regline_equation(formula=reg$call$formula, label.x=1, label.y=1) # Füge Gleichung ein
ggplot(data=dat, aes(x=drinks, y=blood_alc)) + # Definiere Daten
ggtitle("Angepasstes Modell: y = a + bx") + # Titel über Plot
geom_point(size=3) + # Scatter plot mit Punkten der Größe 3
scale_x_continuous(name="Anzahl Getränke", limits=c(0, 9), breaks=seq(0, 9, by=1)) + # x-Achse
scale_y_continuous(name="Promillewert", limits=c(0, 1.5)) + # y-Achse
theme_classic() + # Simple, klassische Formatierung
geom_smooth(method='lm', formula=y~0+x, se=FALSE ) + # Füge Gerade ein
stat_regline_equation(formula=y~0+x, label.x=1, label.y=1) # Füge Gleichung ein
ggplot(data=dat, aes(x=drinks, y=blood_alc)) + # Definiere Daten
ggtitle("Angepasstes Modell: y = a + bx") + # Titel über Plot
geom_point(size=3) + # Scatter plot mit Punkten der Größe 3
scale_x_continuous(name="Anzahl Getränke", limits=c(0, 9), breaks=seq(0, 9, by=1)) + # x-Achse
scale_y_continuous(name="Promillewert", limits=c(0, 1.5)) + # y-Achse
theme_classic() + # Simple, klassische Formatierung
geom_smooth(method='lm', formula=y~x*drinks, se=FALSE ) + # Füge Gerade ein
stat_regline_equation(label.x=1, label.y=1) # Füge Gleichung ein
ggplot(data=dat, aes(x=drinks, y=blood_alc)) + # Definiere Daten
ggtitle("Angepasstes Modell: y = a + bx") + # Titel über Plot
geom_point(size=3) + # Scatter plot mit Punkten der Größe 3
scale_x_continuous(name="Anzahl Getränke", limits=c(0, 9), breaks=seq(0, 9, by=1)) + # x-Achse
scale_y_continuous(name="Promillewert", limits=c(0, 1.5)) + # y-Achse
theme_classic() + # Simple, klassische Formatierung
geom_smooth(method='lm', formula=y~0+x, se=FALSE ) + # Füge Gerade ein
stat_regline_equation(formula=y~0+x, label.x=1, label.y=1) # Füge Gleichung ein
ggplot(data=dat, aes(x=drinks, y=blood_alc)) + # Definiere Daten
ggtitle("Angepasstes Modell: y = a + bx") + # Titel über Plot
geom_point(size=3) + # Scatter plot mit Punkten der Größe 3
scale_x_continuous(name="Anzahl Getränke", limits=c(0, 9), breaks=seq(0, 9, by=1)) + # x-Achse
scale_y_continuous(name="Promillewert", limits=c(0, 1.5)) + # y-Achse
theme_classic() + # Simple, klassische Formatierung
geom_smooth(method='lm', formula=y~x, se=FALSE ) + # Füge Gerade ein
stat_regline_equation(label.x=1, label.y=1) # Füge Gleichung ein
ggplot(data=dat, aes(x=drinks, y=blood_alc)) + # Definiere Daten
ggtitle("Angepasstes Modell: y = a + bx") + # Titel über Plot
geom_point(size=3) + # Scatter plot mit Punkten der Größe 3
scale_x_continuous(name="Anzahl Getränke", limits=c(0, 9), breaks=seq(0, 9, by=1)) + # x-Achse
scale_y_continuous(name="Promillewert", limits=c(0, 1.5)) + # y-Achse
theme_classic() + # Simple, klassische Formatierung
geom_smooth(method='lm', formula=y~0+x, se=FALSE ) + # Füge Gerade ein
stat_regline_equation(formula=y~0+x, label =  paste(..eq.label..), label.x=1, label.y=1) # Füge Gleichung ein
ggplot(data=dat, aes(x=drinks, y=blood_alc)) + # Definiere Daten
ggtitle("Angepasstes Modell: y = a + bx") + # Titel über Plot
geom_point(size=3) + # Scatter plot mit Punkten der Größe 3
scale_x_continuous(name="Anzahl Getränke", limits=c(0, 9), breaks=seq(0, 9, by=1)) + # x-Achse
scale_y_continuous(name="Promillewert", limits=c(0, 1.5)) + # y-Achse
theme_classic() + # Simple, klassische Formatierung
geom_smooth(method='lm', formula=y~0+x, se=FALSE ) + # Füge Gerade ein
stat_regline_equation(formula=y~0+x, label=paste(..eq.label..), label.x=1, label.y=1) # Füge Gleichung ein
ggplot(data=dat, aes(x=drinks, y=blood_alc)) + # Definiere Daten
ggtitle("Angepasstes Modell: y = a + bx") + # Titel über Plot
geom_point(size=3) + # Scatter plot mit Punkten der Größe 3
scale_x_continuous(name="Anzahl Getränke", limits=c(0, 9), breaks=seq(0, 9, by=1)) + # x-Achse
scale_y_continuous(name="Promillewert", limits=c(0, 1.5)) + # y-Achse
theme_classic() + # Simple, klassische Formatierung
geom_smooth(method='lm', formula=y~0+x, se=FALSE ) + # Füge Gerade ein
stat_regline_equation(formula=y~0+x, aes(label=paste(..eq.label..)), label.x=1, label.y=1) # Füge Gleichung ein
ggplot(data=dat, aes(x=drinks, y=blood_alc)) + # Definiere Daten
ggtitle("Angepasstes Modell: y = a + bx") + # Titel über Plot
geom_point(size=3) + # Scatter plot mit Punkten der Größe 3
scale_x_continuous(name="Anzahl Getränke", limits=c(0, 9), breaks=seq(0, 9, by=1)) + # x-Achse
scale_y_continuous(name="Promillewert", limits=c(0, 1.5)) + # y-Achse
theme_classic() + # Simple, klassische Formatierung
geom_smooth(method='lm', formula=y~0+x, se=FALSE ) + # Füge Gerade ein
stat_regline_equation(formula=y~0+x, aes(label=paste(..eq.label.., "x")), label.x=1, label.y=1) # Füge Gleichung ein
paste(..eq.label.. , "x")
ggplot(data=dat, aes(x=drinks, y=blood_alc)) + # Definiere Daten
ggtitle("Angepasstes Modell: y = a + bx") + # Titel über Plot
geom_point(size=3) + # Scatter plot mit Punkten der Größe 3
scale_x_continuous(name="Anzahl Getränke", limits=c(0, 9), breaks=seq(0, 9, by=1)) + # x-Achse
scale_y_continuous(name="Promillewert", limits=c(0, 1.5)) + # y-Achse
theme_classic() + # Simple, klassische Formatierung
geom_smooth(method='lm', formula=y~0+x, se=FALSE ) + # Füge Gerade ein
stat_regline_equation(formula=y~0+x, aes(label=paste(..eq.label.. , "x")), label.x=1, label.y=1) # Füge Gleichung ein
reg_bx$coefficients
ggplot(data=dat, aes(x=drinks, y=blood_alc)) + # Definiere Daten
ggtitle("Angepasstes Modell: y = a + bx") + # Titel über Plot
geom_point(size=3) + # Scatter plot mit Punkten der Größe 3
scale_x_continuous(name="Anzahl Getränke", limits=c(0, 9), breaks=seq(0, 9, by=1)) + # x-Achse
scale_y_continuous(name="Promillewert", limits=c(0, 1.5)) + # y-Achse
theme_classic() + # Simple, klassische Formatierung
geom_smooth(method='lm', formula=y~0+x, se=FALSE ) + # Füge Gerade ein
annotate("text", label=paste("y = ", reg_bx$coefficients, "x"), x=1, y=1)
ggplot(data=dat, aes(x=drinks, y=blood_alc)) + # Definiere Daten
ggtitle("Angepasstes Modell: y = a + bx") + # Titel über Plot
geom_point(size=3) + # Scatter plot mit Punkten der Größe 3
scale_x_continuous(name="Anzahl Getränke", limits=c(0, 9), breaks=seq(0, 9, by=1)) + # x-Achse
scale_y_continuous(name="Promillewert", limits=c(0, 1.5)) + # y-Achse
theme_classic() + # Simple, klassische Formatierung
geom_smooth(method='lm', formula=y~0+x, se=FALSE ) + # Füge Gerade ein
annotate("text", label=paste("y = ", round(reg_bx$coefficients,2), "x"), x=1, y=1)
ggplot(data=dat, aes(x=drinks, y=blood_alc)) + # Definiere Daten
ggtitle("Angepasstes Modell: y = a + bx") + # Titel über Plot
geom_point(size=3) + # Scatter plot mit Punkten der Größe 3
scale_x_continuous(name="Anzahl Getränke", limits=c(0, 9), breaks=seq(0, 9, by=1)) + # x-Achse
scale_y_continuous(name="Promillewert", limits=c(0, 1.5)) + # y-Achse
theme_classic() + # Simple, klassische Formatierung
geom_smooth(method='lm', formula=y~0+x, se=FALSE ) + # Füge Gerade ein
annotate("text", label=paste("y =", round(reg_bx$coefficients,2), "x"), x=1, y=1)
setwd("D:/RKurse/Dokumentation/crashcouRse")
library("rmarkdown")
rmarkdown::clean_site()  # delete old files
rmarkdown::render_site(encoding="UTF-8") # render all files new; UTF-8 for ä, ö, ü, ß
{
library(stringr); library(knitr)
filenames <- list.files(pattern=".Rmd")
dont <- str_detect(filenames, paste(c("appendix", "kontakt", "index"), collapse="|"))
filenames <- filenames[!dont]
site.wd <- getwd()
setwd("D:/RKurse/Dokumentation/Vorführung")
for (i in 1:length(filenames)){
purl(paste0(site.wd,"/",filenames[i]))
print(filenames[i])
}
setwd(site.wd)
} # tranlsate website to R codes as well
library(data.table)
dat <- fread("vision fixed (other) LM.txt")
library(data.table)
dat <- fread("D:/RKurse/MyDatasets/vision fixed (other) LM.txt")
dat <- fread("D:/RKurse/MyDatasets/vision fixed (other) LM.txt", stringsAsFactors=TRUE)
dat <- fread("D:/RKurse/MyDatasets/vision fixed (other) LM.txt", dec=",", stringsAsFactors=TRUE)
dat %>% select(Person, Ages, Gender, Vision, Distance)
dat <- fread("D:/RKurse/MyDatasets/vision fixed (other) LM.txt", dec=",", na.strings = "", stringsAsFactors=TRUE)
dat <- dat %>% select(Person, Ages, Gender, Vision, Distance)
setwd("D:/RKurse/Dokumentation/crashcouRse")
library("rmarkdown")
rmarkdown::clean_site()  # delete old files
rmarkdown::render_site(encoding="UTF-8") # render all files new; UTF-8 for ä, ö, ü, ß
{
library(stringr); library(knitr)
filenames <- list.files(pattern=".Rmd")
dont <- str_detect(filenames, paste(c("appendix", "kontakt", "index"), collapse="|"))
filenames <- filenames[!dont]
site.wd <- getwd()
setwd("D:/RKurse/Dokumentation/Vorführung")
for (i in 1:length(filenames)){
purl(paste0(site.wd,"/",filenames[i]))
print(filenames[i])
}
setwd(site.wd)
} # tranlsate website to R codes as well
