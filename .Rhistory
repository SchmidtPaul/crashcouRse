crd
library(agridat) # agrarwissenschaftliche Beispieldatensätze
library(data.table)
library(desplot) # plotte Feldplan
library(RColorBrewer) # Farben für Feldplan
alpha <- data.table(john.alpha)
alpha$row <- rep(4:1)
alpha$col <- sort(rep(seq(18:1),4))
alpha <- alpha[, -c("plot")]
names(alpha)#[2] <- "inc.block"
library(agridat) # agrarwissenschaftliche Beispieldatensätze
library(data.table)
library(desplot) # plotte Feldplan
library(RColorBrewer) # Farben für Feldplan
alpha <- data.table(john.alpha)
alpha$row <- rep(4:1)
alpha$col <- sort(rep(seq(18:1),4))
names(alpha)[2] <- "inc.block"
alpha
library(agridat) # agrarwissenschaftliche Beispieldatensätze
library(data.table)
library(desplot) # plotte Feldplan
library(RColorBrewer) # Farben für Feldplan
alpha <- data.table(john.alpha)
alpha$row <- rep(4:1)
alpha$col <- sort(rep(seq(18:1),4))
names(alpha)[3] <- "inc.block"
library(data.table) # bessere Datenmanipulation
library(ggplot2); library(ggfortify) # bessere Plots
library(emmeans) # adjustierte Mittelwerte
library(lme4); library(lmerTest) # Gemischtes Modell
colors <- c(brewer.pal(8,"Blues"),
brewer.pal(8,"Oranges"),
brewer.pal(8,"YlGn"))
desplot(data=alpha, form= gen ~ col+row, col.regions=colors,
text=gen, cex=0.4, shorten="no",
main="Block1          Block2          Block3",
xlab="", ylab="", show.key=F, out1=rep,
out2=inc.block, out2.gpar=list(col="black", lwd=1, lty=1))
alpha <- alpha[,c("gen", "rep", "inc.block", "yield")]
head(alpha)
head(alpha[order(gen)])
plot(y=alpha$yield, x=alpha$gen)
summary(alpha)
plot(y=alpha$yield, x=alpha$rep)
boxplot(yield ~ rep + inc.block, data=alpha, las=2) #las=2 dreht Achsenbeschriftung
mod <- lmer(yield ~ gen + rep + (1|rep:inc.block), data=alpha)
anova(mod)
means$emmeans
means <- emmeans(mod, pairwise ~ gen, adjust="tukey")
means
means <- CLD(means$emmeans, details=TRUE, Letters=letters)
means
setwd("D:/RKurse/Dokumentation/crashcouRse")
library("rmarkdown")
rmarkdown::clean_site()  # delete old files
rmarkdown::render_site() # create new files
alpha$real.inc.block <- paste0(alpha$rep, alpha$inc.block)
alpha
setwd("D:/RKurse/Dokumentation/crashcouRse")
library("rmarkdown")
rmarkdown::clean_site()  # delete old files
rmarkdown::render_site() # create new files
setwd("D:/RKurse/Dokumentation/crashcouRse")
library("rmarkdown")
rmarkdown::clean_site()  # delete old files
rmarkdown::render_site() # create new files
setwd("D:/RKurse/Dokumentation/crashcouRse")
library("rmarkdown")
rmarkdown::clean_site()  # delete old files
rmarkdown::render_site() # create new files
setwd("D:/RKurse/Dokumentation/crashcouRse")
library("rmarkdown")
rmarkdown::clean_site()  # delete old files
rmarkdown::render_site(encoding="UTF-8") # create new files
setwd("D:/RKurse/Dokumentation/crashcouRse")
library("rmarkdown")
rmarkdown::clean_site()  # delete old files
rmarkdown::render_site(encoding="UTF-8") # render all files new; UTF-8 for ä, ö, ü, ß
setwd("D:/RKurse/Dokumentation/crashcouRse")
library("rmarkdown")
rmarkdown::clean_site()  # delete old files
rmarkdown::render_site(encoding="UTF-8") # render all files new; UTF-8 for ä, ö, ü, ß
library(agridat)
library(data.table)
library(desplot)
library(RColorBrewer)
alpha <- data.table(john.alpha)
alpha$row <- rep(4:1)
alpha$col <- sort(rep(seq(18:1),4))
names(alpha)[3] <- "inc.block"colors24 <- c(brewer.pal(8,"Blues"),
brewer.pal(8,"Oranges"),
brewer.pal(8,"YlGn"))
colors18 <- c(brewer.pal(6,"Blues"),
brewer.pal(6,"Oranges"),
brewer.pal(6,"YlGn"))
alpha$real.inc.block <- paste0(alpha$rep, alpha$inc.block)
desplot(data=alpha, form= gen ~ col+row, col.regions=colors24,
text=gen, cex=0.4, shorten="no",
main="Feldplan",
xlab="", ylab="", show.key=F, out1=rep,
out2=inc.block, out2.gpar=list(col="black", lwd=1, lty=1))
desplot(data=alpha, form= real.inc.block ~ col+row,
col.regions=colors18,
text=gen, cex=0.4, shorten="no",
main="Block1          Block2          Block3",
xlab="", ylab="", show.key=F, out1=rep)
library(agridat)
library(data.table)
library(desplot)
library(RColorBrewer)
alpha <- data.table(john.alpha)
alpha$row <- rep(4:1)
alpha$col <- sort(rep(seq(18:1),4))
names(alpha)[3] <- "inc.block"
colors24 <- c(brewer.pal(8,"Blues"),
brewer.pal(8,"Oranges"),
brewer.pal(8,"YlGn"))
colors18 <- c(brewer.pal(6,"Blues"),
brewer.pal(6,"Oranges"),
brewer.pal(6,"YlGn"))
alpha$real.inc.block <- paste0(alpha$rep, alpha$inc.block)
desplot(data=alpha, form= gen ~ col+row, col.regions=colors24,
text=gen, cex=0.4, shorten="no",
main="Feldplan",
xlab="", ylab="", show.key=F, out1=rep,
out2=inc.block, out2.gpar=list(col="black", lwd=1, lty=1))
desplot(data=alpha, form= real.inc.block ~ col+row,
col.regions=colors18,
text=gen, cex=0.4, shorten="no",
main="Block1          Block2          Block3",
xlab="", ylab="", show.key=F, out1=rep)
setwd("D:/RKurse/Dokumentation/crashcouRse")
library("rmarkdown")
rmarkdown::clean_site()  # delete old files
rmarkdown::render_site(encoding="UTF-8") # render all files new; UTF-8 for ä, ö, ü, ß
library(agridat)
library(desplot)
library(RColorBrewer)
alpha <- john.alpha
alpha$row <- rep(4:1)
alpha$col <- sort(rep(seq(18:1),4))
colors18 <- c(brewer.pal(6,"Blues"),
brewer.pal(6,"Oranges"),
brewer.pal(6,"YlGn"))
alpha$all.block <- paste0(alpha$rep, alpha$block)
desplot(data=alpha, form= all.block ~ col+row,
col.regions=colors18,
text=gen, cex=0.4, shorten="no",
main="Block1          Block2          Block3",
xlab="", ylab="", show.key=F, out1=rep)
library(agridat)
library(desplot)
library(RColorBrewer)
alpha <- john.alpha
alpha$row <- rep(4:1)
alpha$col <- sort(rep(seq(18:1),4))
colors18 <- c(brewer.pal(6,"Blues"),
brewer.pal(6,"Oranges"),
brewer.pal(6,"YlGn"))
alpha$all.block <- paste0(alpha$rep, alpha$block)
desplot(data=alpha, form= all.block ~ col+row,
col.regions=colors18,
text=gen, cex=0.4, shorten="no",
main="Block1            Block2            Block3",
xlab="", ylab="", show.key=F, out1=rep)
library(agridat)
library(desplot)
library(RColorBrewer)
alpha <- john.alpha
alpha$row <- rep(4:1)
alpha$col <- sort(rep(seq(18:1),4))
colors18 <- c(brewer.pal(6,"Blues"),
brewer.pal(6,"Oranges"),
brewer.pal(6,"YlGn"))
alpha$all.block <- paste0(alpha$rep, alpha$block)
desplot(data=alpha, form=all.block ~ col+row,
col.regions=colors18,
text=gen, cex=0.4, shorten="no",
main="Block1            Block2            Block3",
xlab="", ylab="", show.key=F,
out1=rep, out2=all.block)
library(agridat)
library(desplot)
library(RColorBrewer)
alpha <- john.alpha
alpha$row <- rep(4:1)
alpha$col <- sort(rep(seq(18:1),4))
colors18 <- c(brewer.pal(6,"Blues"),
brewer.pal(6,"Oranges"),
brewer.pal(6,"YlGn"))
alpha$all.block <- paste0(alpha$rep, alpha$block)
desplot(data=alpha, form=all.block ~ col+row,
col.regions=colors18,
text=gen, cex=0.4, shorten="no",
main="Block1            Block2            Block3",
xlab="", ylab="", show.key=F,
out1=rep,
out2=all.block ,out2.gpar=list(col="black", lwd=1, lty=1))
library(agridat)
library(desplot)
library(RColorBrewer)
alpha <- john.alpha
alpha$row <- rep(4:1)
alpha$col <- sort(rep(seq(18:1),4))
colors18 <- c(brewer.pal(6,"Blues"),
brewer.pal(6,"Oranges"),
brewer.pal(6,"YlGn"))
alpha$all.block <- paste(alpha$rep, alpha$block)
desplot(data=alpha, form=all.block ~ col+row,
col.regions=colors18,
text=gen, cex=0.4, shorten="no",
main="Block1            Block2            Block3",
xlab="", ylab="", show.key=F,
out1=rep,
out2=all.block ,out2.gpar=list(col="black", lwd=1, lty=1))
seq(18:1)
rep(1,4)
seq(rep(1,4), rep(1,4))
desplot(data=alpha, form= gen ~ col+row,
text=gen, cex=0.4, shorten="no",
xlab="", ylab="", show.key=F,
out1=rep,
out2=all.block ,out2.gpar=list(col="black", lwd=1, lty=1))
library(agridat)
library(desplot)
library(RColorBrewer)
alpha <- john.alpha
alpha$row <- rep(4:1)
alpha$col <- sort(rep(seq(18:1),4))
alpha$all.block <- paste(alpha$rep, alpha$block)
colors18 <- c(brewer.pal(6,"Blues"),
brewer.pal(6,"Oranges"),
brewer.pal(6,"YlGn"))
desplot(data=alpha, form= gen ~ col+row,
text=gen, cex=0.4, shorten="no",
xlab="", ylab="", show.key=F,
out1=rep,
out2=all.block ,out2.gpar=list(col="black", lwd=1, lty=1))
library(agridat)
library(desplot)
library(RColorBrewer)
alpha <- john.alpha
alpha$row <- rep(4:1)
alpha$col <- sort(rep(seq(18:1),4))
alpha$all.block <- paste(alpha$rep, alpha$block)
colors18 <- c(brewer.pal(6,"Blues"),
brewer.pal(6,"Oranges"),
brewer.pal(6,"YlGn"))
desplot(data=alpha, form= gen ~ col+row,
text=gen, cex=0.4, shorten="no",
main="", xlab="", ylab="", show.key=F,
out1=rep,
out2=all.block ,out2.gpar=list(col="black", lwd=1, lty=1))
library(agridat)
library(desplot)
library(RColorBrewer)
alpha <- john.alpha
alpha$row <- rep(4:1)
alpha$col <- sort(rep(seq(18:1),4))
alpha$all.block <- paste(alpha$rep, alpha$block)
colors18 <- c(brewer.pal(6,"Blues"),
brewer.pal(6,"Oranges"),
brewer.pal(6,"YlGn"))
desplot(data=alpha, form= gen ~ col+row,
text=gen, cex=0.4, shorten="no",
main="", show.key=F,
out1=rep,
out2=all.block ,out2.gpar=list(col="black", lwd=1, lty=1))
library(agridat)
library(desplot)
library(RColorBrewer)
alpha <- john.alpha
alpha$row <- rep(4:1)
alpha$col <- sort(rep(seq(18:1),4))
alpha$all.block <- paste(alpha$rep, alpha$block)
colors18 <- c(brewer.pal(6,"Blues"),
brewer.pal(6,"Oranges"),
brewer.pal(6,"YlGn"))
desplot(data=alpha, form= gen ~ col+row,
text=gen, cex=0.4, shorten="no",
main="",
out1=rep,
out2=all.block ,out2.gpar=list(col="black", lwd=1, lty=1))
library(agridat)
library(desplot)
library(RColorBrewer)
alpha <- john.alpha
alpha$row <- rep(4:1)
alpha$col <- sort(rep(seq(18:1),4))
alpha$all.block <- paste(alpha$rep, alpha$block)
colors18 <- c(brewer.pal(6,"Blues"),
brewer.pal(6,"Oranges"),
brewer.pal(6,"YlGn"))
desplot(data=alpha, form= gen ~ col+row,
text=gen, cex=0.4, shorten="no",
main="", show.key=F)
library(agridat)
library(desplot)
library(RColorBrewer)
alpha <- john.alpha
alpha$row <- rep(4:1)
alpha$col <- sort(rep(seq(18:1),4))
alpha$all.block <- paste(alpha$rep, alpha$block)
colors18 <- c(brewer.pal(6,"Blues"),
brewer.pal(6,"Oranges"),
brewer.pal(6,"YlGn"))
desplot(data=alpha, form= gen ~ col+row,
text=gen, cex=0.4, shorten="no",
out1=gen,
main="", show.key=F)
library(agridat)
library(desplot)
library(RColorBrewer)
alpha <- john.alpha
alpha$row <- rep(4:1)
alpha$col <- sort(rep(seq(18:1),4))
alpha$all.block <- paste(alpha$rep, alpha$block)
colors18 <- c(brewer.pal(6,"Blues"),
brewer.pal(6,"Oranges"),
brewer.pal(6,"YlGn"))
desplot(data=alpha, form= gen ~ col+row,
text=gen, cex=1, shorten="no",
out1=gen,
main="", show.key=F)
---
title: "FeldplÃ¤ne mit dem desplot package"
---
```{r, echo=FALSE, warning=FALSE, message=FALSE, error=FALSE}
library(agridat) # agrarwissenschaftliche Beispieldatensätze
library(data.table)
library(desplot) # plotte Feldplan
library(RColorBrewer) # Farben für Feldplan
alpha <- data.table(john.alpha)
alpha$row <- rep(4:1)
alpha$col <- sort(rep(seq(18:1),4))
names(alpha)[3] <- "inc.block"
alpha$plot <- NULL
```
Die Feldpläne, die das Versuchsdesigns in den verschiedenen Kapiteln grafisch darstellen, wurden mit dem `desplot` package erstellt. Hier sind beispielhaft ein paar Codes aufgeführt.
```{r}
library(desplot)
library(RColorBrewer) # bessere Farbauswahlen
```
# Beispiel 1
Bei diesem Datensatz handelt es sich um ein $\alpha$-Design mit 3 vollständigen Blöcken, die jeweils 6 unvollständige Blöcke a 4 Parzellen enthalten. Es wurden 24 Sorten geprüft.
<div class = "row"> <div class = "col-md-6">
```{r}
head(alpha)
```
</div> <div class = "col-md-6">
```{r}
str(alpha, width=40, strict.width="cut")
```
</div> </div>
## Hervorheben der 24 Sorten
```{r, fig.height = 2, fig.width = 4, fig.align = "center"}
desplot(data=alpha, form= gen ~ col+row,
text=gen, cex=1, shorten="no",
out1=gen,
main="", show.key=F)
```
---
title: "FeldplÃ¤ne mit dem desplot package"
---
```{r, echo=FALSE, warning=FALSE, message=FALSE, error=FALSE}
library(agridat) # agrarwissenschaftliche Beispieldatensätze
library(data.table)
library(desplot) # plotte Feldplan
library(RColorBrewer) # Farben für Feldplan
alpha <- data.table(john.alpha)
alpha$row <- rep(4:1)
alpha$col <- sort(rep(seq(18:1),4))
names(alpha)[3] <- "inc.block"
alpha$plot <- NULL
```
Die Feldpläne, die das Versuchsdesigns in den verschiedenen Kapiteln grafisch darstellen, wurden mit dem `desplot` package erstellt. Hier sind beispielhaft ein paar Codes aufgeführt.
```{r}
library(desplot)
library(RColorBrewer) # bessere Farbauswahlen
```
# Beispiel 1
Bei diesem Datensatz handelt es sich um ein $\alpha$-Design mit 3 vollständigen Blöcken, die jeweils 6 unvollständige Blöcke a 4 Parzellen enthalten. Es wurden 24 Sorten geprüft.
<div class = "row"> <div class = "col-md-6">
```{r}
head(alpha)
```
</div> <div class = "col-md-6">
```{r}
str(alpha, width=40, strict.width="cut")
```
</div> </div>
## Hervorheben der 24 Sorten
```{r, fig.height = 2, fig.width = 4, fig.align = "center"}
desplot(data=alpha, form= gen ~ col+row,
text=gen, cex=0.4, shorten="no",
main="", show.key=F)
```
??desplot
?desplot
library(agridat) # agrarwissenschaftliche Beispieldatensätze
library(data.table)
library(desplot) # plotte Feldplan
library(RColorBrewer) # Farben für Feldplan
alpha <- data.table(john.alpha)
alpha$row <- rep(4:1)
alpha$col <- sort(rep(seq(18:1),4))
names(alpha)[3] <- "inc.block"
levels(alpha$inc.block) <- paste0("iB",seq(1,18))
alpha$plot <- NULL
levels(alpha$inc.block)
library(agridat)
library(desplot)
library(RColorBrewer)
alpha <- john.alpha
alpha$row <- rep(4:1)
alpha$col <- sort(rep(seq(18:1),4))
alpha$all.block <- paste(alpha$rep, alpha$block)
colors18 <- c(brewer.pal(6,"Blues"),
brewer.pal(6,"Oranges"),
brewer.pal(6,"YlGn"))
desplot(data=alpha, form=all.block ~ col+row,
col.regions=colors18,
text=gen, cex=0.4, shorten="no",
main="Block1            Block2            Block3",
xlab="", ylab="", show.key=F,
out1=rep,
out2=all.block ,out2.gpar=list(col="black", lwd=1, lty=1))
library(agridat)
library(desplot)
library(RColorBrewer)
alpha <- john.alpha
alpha$row <- rep(4:1)
alpha$col <- sort(rep(seq(18:1),4))
levels(alpha$inc.block) <- paste0("iB",seq(1,18))
colors18 <- c(brewer.pal(6,"Blues"),
brewer.pal(6,"Oranges"),
brewer.pal(6,"YlGn"))
desplot(data=alpha, form=inc.block ~ col+row,
col.regions=colors18,
text=gen, cex=0.4, shorten="no",
main="Block1            Block2            Block3",
xlab="", ylab="", show.key=F,
out1=rep,
out2=all.block ,out2.gpar=list(col="black", lwd=1, lty=1))
library(agridat)
library(desplot)
library(RColorBrewer)
alpha <- john.alpha
alpha$row <- rep(4:1)
alpha$col <- sort(rep(seq(18:1),4))
levels(alpha$inc.block) <- paste0("iB",seq(1,18))
colors18 <- c(brewer.pal(6,"Blues"),
brewer.pal(6,"Oranges"),
brewer.pal(6,"YlGn"))
desplot(data=alpha, form=inc.block ~ col+row,
col.regions=colors18,
text=gen, cex=0.4, shorten="no",
main="Block1            Block2            Block3",
xlab="", ylab="", show.key=F,
out1=rep,
out2=inc.block ,out2.gpar=list(col="black", lwd=1, lty=1))
library(agridat)
library(desplot)
library(RColorBrewer)
alpha <- john.alpha
alpha$row <- rep(4:1)
alpha$col <- sort(rep(seq(18:1),4))
levels(alpha$block) <- paste0("iB",seq(1,18))
colors18 <- c(brewer.pal(6,"Blues"),
brewer.pal(6,"Oranges"),
brewer.pal(6,"YlGn"))
desplot(data=alpha, form=block ~ col+row,
col.regions=colors18,
text=gen, cex=0.4, shorten="no",
main="Block1            Block2            Block3",
xlab="", ylab="", show.key=F,
out1=rep,
out2=block ,out2.gpar=list(col="black", lwd=1, lty=1))
?desplot
oats <- data.table(yates.oats)
nuts <- data.table(ryder.groundnut)
desplot(data=nuts, form= res ~ col+row,
num=res, cex=0.5,
out1=block, show.key=F,
main="Residuen des RCBD Modells")
?desplot
setwd("D:/RKurse/Dokumentation/crashcouRse")
library("rmarkdown")
rmarkdown::clean_site()  # delete old files
rmarkdown::render_site(encoding="UTF-8") # render all files new; UTF-8 for ä, ö, ü, ß
desplot(data=alpha, form= rep ~ col+row,
text=gen, shorten="no",
out1=rep,
main="", show.key=F)
setwd("D:/RKurse/Dokumentation/crashcouRse")
library("rmarkdown")
rmarkdown::clean_site()  # delete old files
rmarkdown::render_site(encoding="UTF-8") # render all files new; UTF-8 for ä, ö, ü, ß
devtools::install_github("rstudio/fontawesome")
setwd("D:/RKurse/Dokumentation/crashcouRse")
library("rmarkdown")
rmarkdown::clean_site()  # delete old files
rmarkdown::render_site(encoding="UTF-8") # render all files new; UTF-8 for ä, ö, ü, ß
setwd("D:/RKurse/Dokumentation/crashcouRse")
library("rmarkdown")
rmarkdown::clean_site()  # delete old files
rmarkdown::render_site(encoding="UTF-8") # render all files new; UTF-8 for ä, ö, ü, ß
setwd("D:/RKurse/Dokumentation/crashcouRse")
library("rmarkdown")
rmarkdown::clean_site()  # delete old files
rmarkdown::render_site(encoding="UTF-8") # render all files new; UTF-8 for ä, ö, ü, ß
