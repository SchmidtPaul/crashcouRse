fixed  = y ~ grp ,
random = ~ time)
View(lemna)
lemna$grp   <- as.factor(lemna$grp)
lemna$time  <- as.factor(lemna$time)
lemna$plant <- as.factor(lemna$plant)
lme(data   = data.frame(lemna),
fixed  = y ~ grp + time + grp*time,
correlation = corAR1(plant))
rm(list=ls())
library(data.table)
lemna <- fread("D:/Hohenheim/R improv/DataPiepho/lemna.dat")
names(lemna) <-  c("grp", "ind", "time", "y", "count")
lemna$grp   <- as.factor(lemna$grp)
lemna$time  <- as.factor(lemna$time)
lemna$plant <- as.factor(lemna$plant)
# library(lme4); library(lmerTest)
# lmer(data    = lemna,
#      formula = y ~ grp + time + grp:time  )
library(nlme)
lme(data   = data.frame(lemna),
fixed  = y ~ grp + time + grp*time,
correlation = corAR1(plant))
lme(data   = data.frame(lemna),
fixed  = y ~ grp + time + grp*time,
random = ~ time | plant,
correlation = corAR1())
rm(list=ls())
library(data.table)
lemna <- fread("D:/Hohenheim/R improv/DataPiepho/lemna.dat")
names(lemna) <-  c("grp", "ind", "time", "y", "count")
lemna$grp   <- as.factor(lemna$grp)
lemna$time  <- as.factor(lemna$time)
lemna$plant <- as.factor(lemna$plant)
# library(lme4); library(lmerTest)
# lmer(data    = lemna,
#      formula = y ~ grp + time + grp:time  )
library(nlme)
lme(data   = data.frame(lemna),
fixed  = y ~ grp + time + grp*time,
random = ~ time | plant,
correlation = corAR1())
data.frame(lemna)
rm(list=ls())
library(data.table)
lemna <- fread("D:/Hohenheim/R improv/DataPiepho/lemna.dat")
names(lemna) <-  c("grp", "ind", "time", "y", "count")
lemna$grp   <- as.factor(lemna$grp)
lemna$time  <- as.factor(lemna$time)
lemna$ind <- as.factor(lemna$ind)
# library(lme4); library(lmerTest)
# lmer(data    = lemna,
#      formula = y ~ grp + time + grp:time  )
library(nlme)
lme(data   = data.frame(lemna),
fixed  = y ~ grp + time + grp*time,
random = ~ time | ind,
correlation = corAR1())
rm(list=ls())
library(data.table)
lemna <- fread("D:/Hohenheim/R improv/DataPiepho/lemna.dat")
names(lemna) <-  c("grp", "ind", "time", "y", "count")
lemna$grp   <- as.factor(lemna$grp)
lemna$time  <- as.factor(lemna$time)
lemna$ind   <- as.factor(lemna$ind)
# library(lme4); library(lmerTest)
# lmer(data    = lemna,
#      formula = y ~ grp + time + grp:time  )
library(nlme)
mod <- lme(data   = data.frame(lemna),
fixed  = y ~ grp + time + grp*time,
random = ~ time | ind,
correlation = corAR1())
summary(mod)
VarCorr(mod)
mod <- lme(data   = data.frame(lemna),
fixed  = y ~ grp + time + grp*time,
random = ~ +1 | ind
correlation=corCompSymm(form=~time|ind))
mod <- lme(data   = data.frame(lemna),
fixed  = y ~ grp + time + grp*time,
random = ~ +1 | ind,
correlation=corCompSymm(form=~time|ind))
summary(mod)
summary(mod)
VarCorr(mod)
mod <- lme(data   = data.frame(lemna),
fixed  = y ~ grp + time + grp*time,
#random = ~ +1 | ind,
correlation=corCompSymm(form=~time|ind))
mod <- lme(data   = data.frame(lemna), method = "REML",
fixed  = y ~ grp + time + grp*time,
random = ~ +1 | ind,
correlation=corCompSymm(form=~time|ind))
summary(mod)
?gls
mod <- lme(data   = data.frame(lemna),
fixed  = y ~ grp + time + grp*time,
random = ~ +1 | ind,
correlation=corCompSymm(form=~time|ind))
summary(mod)$
VarCorr(mod)
VarCorr(mod)
mod <- lme(data   = data.frame(lemna),
fixed  = y ~ grp + time + grp*time,
random = ~ +1 | ind,
correlation = corCompSymm(form=~ind|time))
mod <- lme(data   = data.frame(lemna),
fixed  = y ~ grp + time + grp*time,
random = ~ +1 | ind,
correlation = corCompSymm(form=~time|ind))
VarCorr(mod)
mod <- lme(data   = data.frame(lemna),
fixed  = y ~ grp + time + grp*time,
random = ~ 1|ind,
correlation = corCompSymm(form=~time|ind))
VarCorr(mod)
mod <- lme(data   = data.frame(lemna),
fixed  = y ~ grp + time + grp*time,
random = ~ 1|ind,
correlation = corCompSymm())
VarCorr(mod)
AIC(mod)
mod <- lme(data   = data.frame(lemna),
fixed  = y ~ grp + time + grp*time,
random = ~ 1|ind,
correlation = corCompSymm(form=~time|ind))
VarCorr(mod)
AIC(mod)
mod <- lme(data   = data.frame(lemna),
fixed  = y ~ grp + time + grp*time,
random = ~ time|ind,
correlation = corCompSymm(form=~time|ind))
VarCorr(mod)
AIC(mod)
mod <- lme(data   = data.frame(lemna),
fixed  = y ~ grp + time + grp*time,
random = ~ 1|ind,
correlation = corCompSymm(form=~Äƒ|time))
mod <- lme(data   = data.frame(lemna),
fixed  = y ~ grp + time + grp*time,
random = ~ 1|ind,
correlation = corCompSymm(form=~1|time))
mod <- lme(data   = data.frame(lemna),
fixed  = y ~ grp + time + grp*time,
random = ~ 1|ind,
correlation = corCompSymm(form=~time|ind))
VarCorr(mod)
summary(mod)
mod <- lme(data   = data.frame(lemna),
fixed  = y ~ grp + time + grp*time,
random = ~ 1|ind,
#correlation = corCompSymm(form=~time|ind))
correlation = corIdent(form=~time|ind))
VarCorr(mod)
AIC(mod)
mod <- lme(data   = data.frame(lemna),
fixed  = y ~ grp + time + grp*time,
random = ~ 1|ind,
#correlation = corCompSymm(form=~time|ind))
correlation = corAR1(form=~time|ind))
mod <- lme(data   = data.frame(lemna),
fixed  = y ~ grp + time + grp*time,
random = ~ 1|ind,
#correlation = corCompSymm(form=~time|ind))
correlation = corAR1(form=~time|ind))
mod <- lme(data   = data.frame(lemna),
fixed  = y ~ grp + time + grp*time,
random = ~ 1|ind,
#correlation = corCompSymm(form=~time|ind))
correlation = corAR1())
VarCorr(mod)
AIC(mod)
summary(mod)
mod <- lme(data   = data.frame(lemna),
fixed  = y ~ grp + time + grp*time,
random = ~ 1|ind,
#correlation = corCompSymm(form=~time|ind))
correlation = corAR1(form = ~1|ind))
VarCorr(mod)
AIC(mod)
summary(mod)
mod <- lme(data   = data.frame(lemna),
fixed  = y ~ grp + time + grp*time,
random = ~ 1|ind,
#correlation = corCompSymm(form=~time|ind))
correlation = corAR1(form = ~time|ind))
mod <- lme(data   = data.frame(lemna),
fixed  = y ~ grp + time + grp*time,
#random = ~ 1|ind,
#correlation = corCompSymm(form=~time|ind))
correlation = corAR1(form = ~1|ind))
mod <- lme(data   = data.frame(lemna),
fixed  = y ~ grp + time + grp*time,
random = ~ 1|ind,
#correlation = corCompSymm(form=~time|ind))
correlation = corAR1(form = ~1|ind))
VarCorr(mod)
AIC(mod)
rm(list=ls())
library(data.table)
lemna <- fread("D:/Hohenheim/R improv/DataPiepho/lemna.dat")
names(lemna) <-  c("grp", "ind", "time", "y", "count")
lemna$grp   <- as.factor(lemna$grp)
lemna$time  <- as.factor(lemna$time)
lemna$ind   <- as.factor(lemna$ind)
# library(lme4); library(lmerTest)
# lmer(data    = lemna,
#      formula = y ~ grp + time + grp:time  )
library(nlme)
mod <- lme(data   = data.frame(lemna),
fixed  = y ~ grp + time + grp*time,
random = ~ 1|ind,
#correlation = corCompSymm(form=~time|ind))
correlation = corAR1(form = ~1|ind))
VarCorr(mod)
AIC(mod)
summary(mod)
library(asreml)
asr <- asreml(data  = data.frame(lemna),
model = y ~ grp + time + grp:time,
rcov  = ~ ar1(time):ind )
asr <- asreml(data  = data.frame(lemna),
model = y ~ grp + time + grp:time,
rcov  = ~ ar1(ind):time )
asr <- asreml(data  = data.frame(lemna),
model = y ~ grp + time + grp:time,
rcov  = ~ ar1(ind):unit )
asr <- asreml(data  = data.frame(lemna),
model = y ~ grp + time + grp:time,
rcov  = ~ ar1(ind):units )
asr <- asreml(data  = data.frame(lemna),
model = y ~ grp + time + grp:time,
#rcov  = ~ ar1(ind):units
)
rm(list=ls())
library(data.table)
lemna <- fread("D:/Hohenheim/R improv/DataPiepho/lemna.dat")
names(lemna) <-  c("grp", "ind", "time", "y", "count")
lemna$grp   <- as.factor(lemna$grp)
lemna$time  <- as.factor(lemna$time)
lemna$ind   <- as.factor(lemna$ind)
# library(lme4); library(lmerTest)
# lmer(data    = lemna,
#      formula = y ~ grp + time + grp:time  )
library(nlme)
mod <- lme(data   = data.frame(lemna),
fixed  = y ~ grp + time + grp*time,
random = ~ 1|ind,
#correlation = corCompSymm(form=~time|ind))
correlation = corAR1(form = ~1|ind))
VarCorr(mod)
AIC(mod)
summary(mod)
library(asreml)
asr <- asreml(data  = data.frame(lemna),
model = y ~ grp + time + grp:time,
#rcov  = ~ ar1(ind):units
)
data.frame(lemna)
asr <- asreml(data  = data.frame(lemna),
model = y ~ grp + time + grp:time
#rcov  = ~ ar1(ind):units
)
asr <- asreml(data  = data.frame(lemna),
fixed = y ~ grp + time + grp:time
#rcov  = ~ ar1(ind):units
)
asr <- asreml(data  = data.frame(lemna),
fixed = y ~ grp + time + grp:time
rcov  = ~ ar1(ind):units
)
asr <- asreml(data  = data.frame(lemna),
fixed = y ~ grp + time + grp:time,
rcov  = ~ ar1(ind):units)
asr <- asreml(data  = data.frame(lemna),
fixed = y ~ grp + time + grp:time,
rcov  = ~ ar1(ind):time)
summary(asr)$covparm
summary(asr)$varcomp
library(RCurl); URL<-getURL("https://raw.githubusercontent.com/SchmidtPaul/useful/master/functions/asremlr_useful.R", ssl.verifypeer = FALSE);eval(parse(text = URL));rm(URL)
getAIC(asr)
asr <- asreml(data  = data.frame(lemna),
fixed = y ~ grp + time + grp:time,
rcov  = ~ ar1(ind):time)
asr <- asreml(data  = data.frame(lemna),
fixed = y ~ grp + time + grp:time,
rcov  = ~ ar1(time):ind)
asr <- asreml(data  = data.frame(lemna),
fixed = y ~ grp + time + grp:time,
rcov  = ~ ar1(ind):time)
summary(asr)$varcomp
getAIC(asr)
asr <- asreml(data  = data.frame(lemna),
fixed = y ~ grp + time + grp:time,
rcov  = ~ cor(ind):time)
asr <- asreml(data  = data.frame(lemna),
fixed = y ~ grp + time + grp:time,
rcov  = ~ corg(ind):time)
asr <- asreml(data  = data.frame(lemna),
fixed = y ~ grp + time + grp:time,
rcov  = ~ cor(ind):time)
asr <- asreml(data  = data.frame(lemna),
fixed = y ~ grp + time + grp:time,
rcov  = ~ cor(time):ind)
asr <- asreml(data  = data.frame(lemna),
fixed = y ~ grp + time + grp:time,
rcov  = ~ cor(ind:time))
View(lemna)
asr <- asreml(data  = data.frame(lemna),
fixed = y ~ grp + time + grp:time,
rcov  = ~ cor(time):ind)
dat <- data.frame(lemna)
asr <- asreml(data  = dat,
fixed = y ~ grp + time + grp:time,
rcov  = ~ cor(time):ind)
dat[order(dat$time)]
lemna <- lemna[order(lemna$time)]
lemna
lemna <- lemna[order(lemna$time)]
dat <- data.frame(lemna)
asr <- asreml(data  = dat,
fixed = y ~ grp + time + grp:time,
rcov  = ~ cor(time):ind)
summary(asr)$varcomp
getAIC(asr)
asr <- asreml(data  = dat,
fixed = y ~ grp + time + grp:time,
rcov  = ~ corg(time):ind)
summary(asr)$varcomp
getAIC(asr)
summary(asr)$varcomp[,2]
summary(asr)$varcomp[,c(2,5)]
dat
lemna <- lemna[order(lemna$time)]
dat <- data.frame(lemna)
asr <- asreml(data  = dat,
fixed = y ~ grp + time + grp:time,
rcov  = ~ corg(time):ind)
summary(asr)$varcomp[,c(2,5)]
asr <- asreml(data  = dat,
fixed = y ~ grp + time + grp:time,
rcov  = ~ cor(time):ind)
summary(asr)$varcomp[,c(2,5)]
getAIC(asr)
wald.asreml(asr)
asr <- asreml(data  = dat,
fixed = y ~ grp + time + grp:time,
rcov  = ~ corg(time):ind)
summary(asr)$varcomp[,c(2,5)]
asr <- asreml(data  = dat,
fixed = y ~ grp + time + grp:time,
rcov  = ~ corgh(time):ind)
summary(asr)$varcomp[,c(2,5)]
wald.asreml(asr)
summary(asr)$varcomp[,c(2,5)]
getAIC(asr)
dat
asr <- asreml(data  = dat,
fixed = y ~ grp + time + grp:time)
summary(asr)$varcomp[,c(2,5)]
getAIC(asr)
wald.asreml(asr)
wald(asr, denDF = "algebraic")
lmer(data    = lemna,
formula = y ~ grp + time + grp:time + (1|ind) )
library(lme4); library(lmerTest)
lmer(data    = lemna,
formula = y ~ grp + time + grp:time + (1|ind) )
rm(list=ls())
library(data.table)
library(RCurl); URL<-getURL("https://raw.githubusercontent.com/SchmidtPaul/useful/master/functions/asremlr_useful.R", ssl.verifypeer = FALSE);eval(parse(text = URL));rm(URL)
lemna <- fread("D:/Hohenheim/R improv/DataPiepho/lemna.dat")
names(lemna) <-  c("grp", "ind", "time", "y", "count")
lemna$grp   <- as.factor(lemna$grp)
lemna$time  <- as.factor(lemna$time)
lemna$ind   <- as.factor(lemna$ind)
library(lme4); library(lmerTest)
lmer(data    = lemna,
formula = y ~ grp + time + grp:time + (1|ind) )
rm(list=ls())
library(data.table)
library(RCurl); URL<-getURL("https://raw.githubusercontent.com/SchmidtPaul/useful/master/functions/asremlr_useful.R", ssl.verifypeer = FALSE);eval(parse(text = URL));rm(URL)
lemna <- fread("D:/Hohenheim/R improv/DataPiepho/lemna.dat")
names(lemna) <-  c("grp", "ind", "time", "y", "count")
lemna$grp   <- as.factor(lemna$grp)
lemna$time  <- as.factor(lemna$time)
lemna$ind   <- as.factor(lemna$ind)
library(lme4); library(lmerTest)
lmer(data    = lemna,
formula = y ~ grp + time + grp:time + (1|ind) )
lmer(data    = lemna,
formula = y ~ grp + time + grp:time + (time|ind) )
library(nlme)
mod <- lme(data   = data.frame(lemna),
fixed  = y ~ grp + time + grp*time,
random = ~ 1|ind,
#correlation = corCompSymm(form=~time|ind))
correlation = corAR1(form = ~1|ind))
VarCorr(mod)
mod <- lme(data   = data.frame(lemna),
fixed  = y ~ grp + time + grp*time,
random = ~ 1|ind,
#correlation = corCompSymm(form=~time|ind))
correlation = corIdent(form = ~1|ind))
VarCorr(mod)
mod <- lme(data   = data.frame(lemna),
fixed  = y ~ grp + time + grp*time,
random = ~ 1|ind,
#correlation = corCompSymm(form=~time|ind))
correlation = corCompSymm(form = ~1|ind))
VarCorr(mod)
AIC(mod)
mod <- lme(data   = data.frame(lemna),
fixed  = y ~ grp + time + grp*time,
random = ~ 1|ind,
#correlation = corCompSymm(form=~time|ind))
correlation = corCompSymm(form = ~time|ind))
VarCorr(mod)
AIC(mod)
mod <- lme(data   = data.frame(lemna),
fixed  = y ~ grp + time + grp*time,
random = ~ 1|ind,
#correlation = corCompSymm(form=~time|ind))
correlation = corCompSymm(form = ~time|ind))
VarCorr(mod)
AIC(mod)
mod <- lme(data   = data.frame(lemna),
fixed  = y ~ grp + time + grp*time,
random = ~ 1|ind,
#correlation = corCompSymm(form=~time|ind))
correlation = corAR1(form = ~1|ind))
mod <- lme(data   = data.frame(lemna),
fixed  = y ~ grp + time + grp*time,
random = ~ 1|ind,
#correlation = corCompSymm(form=~time|ind))
correlation = corAR1(form = ~1|ind))
mod <- lme(data   = data.frame(lemna),
fixed  = y ~ grp + time + grp*time,
random = ~ 1|ind
#,correlation = corCompSymm(form=~time|ind)
#,correlation = corAR1(form = ~1|ind)
)
mod <- lme(data   = data.frame(lemna),
fixed  = y ~ grp + time + grp*time,
random = ~ 1|ind
#,correlation = corCompSymm(form=~time|ind)
#,correlation = corAR1(form = ~1|ind)
)
VarCorr(mod)
AIC(mod)
mod <- lme(data   = data.frame(lemna),
fixed  = y ~ grp + time + grp*time,
random = ~ 1|ind
#,correlation = corCompSymm(form=~time|ind)
,correlation = corAR1(form = ~1|ind)
)
VarCorr(mod)
AIC(mod)
summary(mod)
x <- summary(mod)
x$sigma
x$AIC
x$modelStruct$corStruct
VarCorr(mod)
mod <- lme(data   = data.frame(lemna),
fixed  = y ~ grp + time + grp*time,
random = ~ 1|ind
#,correlation = corCompSymm(form=~time|ind)
,correlation = corAR1(form = ~1|ind)
)
AIC(mod)
VarCorr(mod)
summary(mod)$modelStruct$corStruct
mod <- lme(data   = data.frame(lemna),
fixed  = y ~ grp + time + grp*time,
random = ~ 1|ind
,correlation = corCompSymm(form=~time|ind)
#,correlation = corAR1(form = ~1|ind)
)
AIC(mod)
VarCorr(mod)
summary(mod)$modelStruct$corStruct
mod <- lme(data   = data.frame(lemna),
fixed  = y ~ grp + time + grp*time,
random = ~ 1|ind
#,correlation = corCompSymm(form=~time|ind)
,correlation = corAR1(form = ~1|ind)
)
AIC(mod)
VarCorr(mod)
summary(mod)$modelStruct$corStruct
anova.lme(mod, type = "marginal", adjustSigma = F)
anova.lme(mod,  adjustSigma = F)
type = "marginal",
anova.lme(mod, type = "marginal", adjustSigma = F)
anova.lme(mod, type = "marginal", adjustSigma=F)
anova.lme(mod, type = "marginal")
anova.lme(mod, type="marginal")
install.packages("rmarkdown")
knit_with_parameters('D:/R Kurse/Dokumentation/Einleitung.Rmd')
?rmarkdown::pdf_document
?latex_engine
setwd("D:/RKurse/Dokumentation/crashcouRse")
library("rmarkdown")
rmarkdown::clean_site()  # delete old files
rmarkdown::render_site(encoding="UTF-8") # render all files new; UTF-8 for Ã¤, Ã¶, Ã¼, ÃŸ
# Mehr Infos
# Split Plot:
#   Bailey (2008) 8.3 + 8.4
#   Dean & Voss (1998) 2.44 + 19
#   Quinn & Keough (2002) 11.1
