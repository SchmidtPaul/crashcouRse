mod <- glm(k/n ~ block + log.dosis + lackfit,
weights= n,
family = quasibinomial(link='logit'),
data   = mohr)
# Devianzanalyse
anova(mod, test="Chisq") # lackfit n.s. -> Modell fertig
final <- glm(k/n ~ block + log.dosis,
weights= n,
family = quasibinomial(link='logit'),
data   = mohr)
final2 <- glmmTMB(k/n ~ block + log.dosis,
weights= n,
family = binomial(link='logit'),
data   = mohr)
summary(final)$dispersion
summary(final2)$sigma
summary(final)$coefficients
summary(final2)$coefficients$cond
# b = -1.8174 (p=0.001)
rm(list=ls())
load(file="D:/RKurse/MyDatasets/mohr - 1reg rcbd binom.rda")
library(car)
mohr$lackfit <- as.factor(mohr$log.dosis)
# Modell: 1reg in RCBD für Prozentzahl
mod <- glm(k/n ~ block + log.dosis + lackfit,
weights= n,
family = quasibinomial(link='logit'),
data   = mohr)
# Devianzanalyse
anova(mod, test="Chisq") # lackfit n.s. -> Modell fertig
final <- glm(k/n ~ block + log.dosis,
weights= n,
family = quasibinomial(link='logit'),
data   = mohr)
final2 <- glmmTMB(k/n ~ block + log.dosis,
weights= n,
family = nbinom1(link='logit'),
data   = mohr)
summary(final)$dispersion
summary(final2)$sigma
summary(final)$coefficients
summary(final2)$coefficients$cond
# b = -1.8174 (p=0.001)
rm(list=ls())
load(file="D:/RKurse/MyDatasets/mohr - 1reg rcbd binom.rda")
library(car)
mohr$lackfit <- as.factor(mohr$log.dosis)
# Modell: 1reg in RCBD für Prozentzahl
mod <- glm(k/n ~ block + log.dosis + lackfit,
weights= n,
family = quasibinomial(link='logit'),
data   = mohr)
# Devianzanalyse
anova(mod, test="Chisq") # lackfit n.s. -> Modell fertig
final <- glm(k/n ~ block + log.dosis,
weights= n,
family = quasibinomial(link='logit'),
data   = mohr)
final2 <- glmmTMB(k/n ~ block + log.dosis,
weights= n,
family = nbinom1(),
data   = mohr)
summary(final)$dispersion
summary(final2)$sigma
summary(final)$coefficients
summary(final2)$coefficients$cond
# b = -1.8174 (p=0.001)
rm(list=ls())
load(file="D:/RKurse/MyDatasets/mohr - 1reg rcbd binom.rda")
library(car)
mohr$lackfit <- as.factor(mohr$log.dosis)
# Modell: 1reg in RCBD für Prozentzahl
mod <- glm(k/n ~ block + log.dosis + lackfit,
weights= n,
family = quasibinomial(link='logit'),
data   = mohr)
# Devianzanalyse
anova(mod, test="Chisq") # lackfit n.s. -> Modell fertig
final <- glm(k/n ~ block + log.dosis,
weights= n,
family = quasibinomial(link=''),
data   = mohr)
final2 <- glmmTMB(k/n ~ block + log.dosis,
weights= n,
family = nbinom1(link='log'),
data   = mohr)
summary(final)$dispersion
summary(final2)$sigma
summary(final)$coefficients
summary(final2)$coefficients$cond
# b = -1.8174 (p=0.001)
rm(list=ls())
load(file="D:/RKurse/MyDatasets/mohr - 1reg rcbd binom.rda")
library(car)
mohr$lackfit <- as.factor(mohr$log.dosis)
# Modell: 1reg in RCBD für Prozentzahl
mod <- glm(k/n ~ block + log.dosis + lackfit,
weights= n,
family = quasibinomial(link='logit'),
data   = mohr)
# Devianzanalyse
anova(mod, test="Chisq") # lackfit n.s. -> Modell fertig
final <- glm(k/n ~ block + log.dosis,
weights= n,
family = quasibinomial(link='log'),
data   = mohr)
final2 <- glmmTMB(k/n ~ block + log.dosis,
weights= n,
family = nbinom1(link='log'),
data   = mohr)
summary(final)$dispersion
summary(final2)$sigma
summary(final)$coefficients
summary(final2)$coefficients$cond
# b = -1.8174 (p=0.001)
rm(list=ls())
load(file="D:/RKurse/MyDatasets/mohr - 1reg rcbd binom.rda")
library(car)
mohr$lackfit <- as.factor(mohr$log.dosis)
# Modell: 1reg in RCBD für Prozentzahl
mod <- glm(k/n ~ block + log.dosis + lackfit,
weights= n,
family = quasibinomial(link='logit'),
data   = mohr)
# Devianzanalyse
anova(mod, test="Chisq") # lackfit n.s. -> Modell fertig
final <- glm(k/n ~ block + log.dosis,
weights= n,
family = quasibinomial(link='log'),
data   = mohr)
final2 <- glmmTMB(k/n ~ block + log.dosis,
weights= n,
family = nbinom2(link='log'),
data   = mohr)
summary(final)$dispersion
summary(final2)$sigma
summary(final)$coefficients
summary(final2)$coefficients$cond
# b = -1.8174 (p=0.001)
rm(list=ls())
load(file="D:/RKurse/MyDatasets/mohr - 1reg rcbd binom.rda")
library(car)
mohr$lackfit <- as.factor(mohr$log.dosis)
# Modell: 1reg in RCBD für Prozentzahl
mod <- glm(k/n ~ block + log.dosis + lackfit,
weights= n,
family = quasibinomial(link='logit'),
data   = mohr)
# Devianzanalyse
anova(mod, test="Chisq") # lackfit n.s. -> Modell fertig
final <- glm(k/n ~ block + log.dosis,
weights= n,
family = quasibinomial(link='logit'),
data   = mohr)
final2 <- glmmTMB(k/n ~ block + log.dosis,
weights= n,
family = nbinom2(link='logit'),
data   = mohr)
summary(final)$dispersion
summary(final2)$sigma
summary(final)$coefficients
summary(final2)$coefficients$cond
# b = -1.8174 (p=0.001)
load(file="D:/RKurse/MyDatasets/ifz - 1F met rcbd binom.rda")
library(glmmTMB)
str(ifz)
# Modell: 1F MET with RCBD für Prozentzahl
mod <- glmmTMB(y/m ~ Sorte + (1|Ort) + (1|Block:Ort) + (1|Sorte:Ort),
weights= m,
family = binom(link='logit'),
data   = ifz,
REML   = FALSE)
summary(mod)
sigma(mod)
final2 <- glmmTMB(k/n ~ block + log.dosis,
weights= n,
family = binom(link='logit'),
data   = mohr)
load(file="D:/RKurse/MyDatasets/ifz - 1F met rcbd binom.rda")
library(glmmTMB)
str(ifz)
# Modell: 1F MET with RCBD für Prozentzahl
mod <- glmmTMB(y/m ~ Sorte + (1|Ort) + (1|Block:Ort) + (1|Sorte:Ort),
weights= m,
family = binom(link='logit'),
data   = ifz,
REML   = FALSE)
summary(mod)
sigma(mod)
load(file="D:/RKurse/MyDatasets/ifz - 1F met rcbd binom.rda")
library(glmmTMB)
str(ifz)
# Modell: 1F MET with RCBD für Prozentzahl
mod <- glmmTMB(y/m ~ Sorte + (1|Ort) + (1|Block:Ort) + (1|Sorte:Ort),
weights= m,
family = binomial(link='logit'),
data   = ifz,
REML   = FALSE)
summary(mod)
sigma(mod)
rm(list=ls())
load(file="D:/RKurse/MyDatasets/mohr - 1reg rcbd binom.rda")
library(car)
mohr$lackfit <- as.factor(mohr$log.dosis)
# Modell: 1reg in RCBD für Prozentzahl
mod <- glm(k/n ~ block + log.dosis + lackfit,
weights= n,
family = quasibinomial(link='logit'),
data   = mohr)
# Devianzanalyse
anova(mod, test="Chisq") # lackfit n.s. -> Modell fertig
final <- glm(k/n ~ block + log.dosis,
weights= n,
family = quasibinomial(link='logit'),
data   = mohr)
final2 <- glmmTMB(k/n ~ block + log.dosis,
weights= n,
family = betabinomial(link='logit'),
data   = mohr)
summary(final)$dispersion
summary(final2)$sigma
summary(final)$coefficients
summary(final2)$coefficients$cond
# b = -1.8174 (p=0.001)
?glmmTMB
final2 <- glmmTMB(k/n ~ block + log.dosis,
weights= n,
family = binomial(link='logit'),
dispformula = ~1,
data   = mohr)
summary(final)$dispersion
summary(final2)$sigma
summary(final)$coefficients
summary(final2)$coefficients$cond
final2 <- glmmTMB(k/n ~ block + log.dosis,
weights= n,
family = binomial(link='logit'),
dispformula = ~1.5,
data   = mohr)
final2 <- glmmTMB(k/n ~ block + log.dosis,
weights= n,
family = quasibinomial(link='logit'),
dispformula = ~1.5,
data   = mohr)
rm(list=ls())
load(file="D:/RKurse/MyDatasets/mohr - 1reg rcbd binom.rda")
library(car)
mohr$lackfit <- as.factor(mohr$log.dosis)
# Modell: 1reg in RCBD für Prozentzahl
mod <- glm(k/n ~ block + log.dosis + lackfit,
weights= n,
family = quasibinomial(link='logit'),
data   = mohr)
# Devianzanalyse
anova(mod, test="Chisq") # lackfit n.s. -> Modell fertig
final <- glm(k/n ~ block + log.dosis,
weights= n,
family = quasibinomial(link='logit'),
data   = mohr)
final2 <- glmmTMB(k/n ~ block + log.dosis,
weights= n,
family = quasibinomial(link='logit'),
data   = mohr)
summary(final)$dispersion
summary(final2)$sigma
summary(final)$coefficients
summary(final2)$coefficients$cond
# b = -1.8174 (p=0.001)
rm(list=ls())
load(file="D:/RKurse/MyDatasets/mohr - 1reg rcbd binom.rda")
library(car)
mohr$lackfit <- as.factor(mohr$log.dosis)
# Modell: 1reg in RCBD für Prozentzahl
mod <- glm(k/n ~ block + log.dosis + lackfit,
weights= n,
family = quasibinomial(link='logit'),
data   = mohr)
# Devianzanalyse
anova(mod, test="Chisq") # lackfit n.s. -> Modell fertig
final <- glm(k/n ~ block + log.dosis,
weights= n,
family = binomial(link='logit'),
data   = mohr)
final2 <- glmmTMB(k/n ~ block + log.dosis,
weights= n,
family = binomial(link='logit'),
data   = mohr)
summary(final)$dispersion
summary(final2)$sigma
summary(final)$coefficients
summary(final2)$coefficients$cond
# b = -1.8174 (p=0.001)
load(file="D:/RKurse/MyDatasets/ifz - 1F met rcbd binom.rda")
library(glmmTMB)
str(ifz)
# Modell: 1F MET with RCBD für Prozentzahl
mod <- glmmTMB(y/m ~ Sorte + (1|Ort) + (1|Block:Ort) + (1|Sorte:Ort),
weights= m,
family = binomial(link='logit'),
data   = ifz,
REML   = FALSE)
summary(mod)
sigma(mod)
anova(mod)
load(file="D:/RKurse/MyDatasets/ifz - 1F met rcbd binom.rda")
library(glmmTMB)
str(ifz)
# Modell: 1F MET with RCBD für Prozentzahl
mod <- glmmTMB(y/m ~ Sorte + (1|Ort) + (1|Block:Ort) + (1|Sorte:Ort),
weights= m,
family = binomial(link='logit'),
data   = ifz,
REML   = FALSE)
summary(mod)
sigma(mod)
anova(mod)
Anova(mod)
Anova(mod, type="III")
# emmeans
means <- emmeans(mod, pairwise ~ Sorte, type="response")
load(file="D:/RKurse/MyDatasets/ifz - 1F met rcbd binom.rda")
library(glmmTMB)
library(emmeans)
str(ifz)
# Modell: 1F MET with RCBD für Prozentzahl
mod <- glmmTMB(y/m ~ Sorte + (1|Ort) + (1|Block:Ort) + (1|Sorte:Ort),
weights= m,
family = binomial(link='logit'),
data   = ifz,
REML   = FALSE)
summary(mod)
sigma(mod)
# Analysis of Deviance
Anova(mod, type="III") # Wald Test
# emmeans
means <- emmeans(mod, pairwise ~ Sorte, type="response")
means <- multcomp::cld(means$emmeans, details=TRUE, Letters=letters)$emmeans
means
# emmeans
means <- emmeans(mod, pairwise ~ Sorte)#, type="response")
means
# emmeans
means <- emmeans(mod, pairwise ~ Sorte, type="response")
means <- multcomp::cld(means$emmeans, details=TRUE, Letters=letters)$emmeans
means
# emmeans
means <- emmeans(mod, pairwise ~ Sorte)#, type="response")
means <- multcomp::cld(means$emmeans, details=TRUE, Letters=letters)$emmeans
means
load(file="D:/RKurse/MyDatasets/ifz - 1F met rcbd binom.rda")
library(glmmTMB)
library(emmeans)
str(ifz)
# Modell: 1F MET with RCBD für Prozentzahl
mod <- glmmTMB(y/m ~ Sorte + (1|Ort) + (1|Block:Ort) + (1|Sorte:Ort),
weights= m,
family = binomial(link='logit'),
data   = ifz,
REML   = FALSE)
summary(mod)
sigma(mod)
# Analysis of Deviance
Anova(mod, type="III") # Wald Test
# emmeans
means <- emmeans(mod, pairwise ~ Sorte, type="response")
means <- multcomp::cld(means$emmeans, details=TRUE, Letters=letters)$emmeans
ggplot() + theme_classic() +
# Rohdaten (ifz)
geom_boxplot(data=ifz, aes(x=Sorte, y=(y/n)), outlier.shape=NA, width=0.6) +
geom_jitter(data=ifz, aes(x=Sorte, y=(y/n)), width=0.25, height=0, shape=1) +
# Ergebnisse (means)
geom_point(data=means, aes(x=as.numeric(Sorte)+0.4, y=prob     ), col="red", shape=16, size=2) +
geom_errorbar(data=means, aes(x=as.numeric(Sorte)+0.4, ymin=asymp.LCL, ymax=asymp.UCL), col="red", width=0.1) +
geom_text(data=means, aes(x=as.numeric(Sorte)+0.5, y=prob     , label =.group), col="red") +
labs(y="Schwarz: Prozentualer Befall\nRot: Adjustierter, rücktransformierter Mittelwert ± 95% Konfidenzintervall", x="Sorte",
caption="Mittelwerte, die mit einem gemeinsamen Buchstaben versehen sind, sind laut Tukey-test nicht signifikant voneinander verschieden.")
load(file="D:/RKurse/MyDatasets/ifz - 1F met rcbd binom.rda")
library(glmmTMB)
library(emmeans)
library(ggplot2)
str(ifz)
# Modell: 1F MET with RCBD für Prozentzahl
mod <- glmmTMB(y/m ~ Sorte + (1|Ort) + (1|Block:Ort) + (1|Sorte:Ort),
weights= m,
family = binomial(link='logit'),
data   = ifz,
REML   = FALSE)
summary(mod)
sigma(mod)
# Analysis of Deviance
Anova(mod, type="III") # Wald Test
# emmeans
means <- emmeans(mod, pairwise ~ Sorte, type="response")
means <- multcomp::cld(means$emmeans, details=TRUE, Letters=letters)$emmeans
ggplot() + theme_classic() +
# Rohdaten (ifz)
geom_boxplot(data=ifz, aes(x=Sorte, y=(y/n)), outlier.shape=NA, width=0.6) +
geom_jitter(data=ifz, aes(x=Sorte, y=(y/n)), width=0.25, height=0, shape=1) +
# Ergebnisse (means)
geom_point(data=means, aes(x=as.numeric(Sorte)+0.4, y=prob     ), col="red", shape=16, size=2) +
geom_errorbar(data=means, aes(x=as.numeric(Sorte)+0.4, ymin=asymp.LCL, ymax=asymp.UCL), col="red", width=0.1) +
geom_text(data=means, aes(x=as.numeric(Sorte)+0.5, y=prob     , label =.group), col="red") +
labs(y="Schwarz: Prozentualer Befall\nRot: Adjustierter, rücktransformierter Mittelwert ± 95% Konfidenzintervall", x="Sorte",
caption="Mittelwerte, die mit einem gemeinsamen Buchstaben versehen sind, sind laut Tukey-test nicht signifikant voneinander verschieden.")
means
ifz
load(file="D:/RKurse/MyDatasets/ifz - 1F met rcbd binom.rda")
library(glmmTMB)
library(emmeans)
library(ggplot2)
str(ifz)
# Modell: 1F MET with RCBD für Prozentzahl
mod <- glmmTMB(y/m ~ Sorte + (1|Ort) + (1|Block:Ort) + (1|Sorte:Ort),
weights= m,
family = binomial(link='logit'),
data   = ifz,
REML   = FALSE)
summary(mod)
sigma(mod)
# Analysis of Deviance
Anova(mod, type="III") # Wald Test
# emmeans
means <- emmeans(mod, pairwise ~ Sorte, type="response")
means <- multcomp::cld(means$emmeans, details=TRUE, Letters=letters)$emmeans
ggplot() + theme_classic() +
# Rohdaten (ifz)
geom_boxplot(data=ifz, aes(x=Sorte, y=(y/m)), outlier.shape=NA, width=0.6) +
geom_jitter(data=ifz, aes(x=Sorte, y=(y/m)), width=0.25, height=0, shape=1) +
# Ergebnisse (means)
geom_point(data=means, aes(x=as.numeric(Sorte)+0.4, y=prob     ), col="red", shape=16, size=2) +
geom_errorbar(data=means, aes(x=as.numeric(Sorte)+0.4, ymin=asymp.LCL, ymax=asymp.UCL), col="red", width=0.1) +
geom_text(data=means, aes(x=as.numeric(Sorte)+0.5, y=prob     , label =.group), col="red") +
labs(y="Schwarz: Prozentualer Befall\nRot: Adjustierter, rücktransformierter Mittelwert ± 95% Konfidenzintervall", x="Sorte",
caption="Mittelwerte, die mit einem gemeinsamen Buchstaben versehen sind, sind laut Tukey-test nicht signifikant voneinander verschieden.")
means
load(file="D:/RKurse/MyDatasets/ifz - 1F met rcbd binom.rda")
library(glmmTMB)
library(emmeans)
library(ggplot2)
str(ifz)
# Modell: 1F MET with RCBD für Prozentzahl
mod <- glmmTMB(y/m ~ Sorte + (1|Ort) + (1|Block:Ort) + (1|Sorte:Ort),
weights= m,
family = binomial(link='logit'),
data   = ifz,
REML   = FALSE)
summary(mod)
sigma(mod)
# Analysis of Deviance
Anova(mod, type="III") # Wald Test
# emmeans
means <- emmeans(mod, pairwise ~ Sorte, type="response")
means <- multcomp::cld(means$emmeans, details=TRUE, Letters=letters)$emmeans
ggplot() + theme_classic() +
# Rohdaten (ifz)
geom_boxplot(data=ifz, aes(x=Sorte, y=(y/m)), outlier.shape=NA, width=0.6) +
geom_jitter(data=ifz, aes(x=Sorte, y=(y/m)), width=0.25, height=0, shape=1) +
# Ergebnisse (means)
geom_point(data=means, aes(x=as.numeric(Sorte)+0.4, y=prob     ), col="red", shape=16, size=2) +
geom_errorbar(data=means, aes(x=as.numeric(Sorte)+0.4, ymin=asymp.LCL, ymax=asymp.UCL), col="red", width=0.1) +
geom_text(data=means, aes(x=as.numeric(Sorte)+0.5, y=prob     , label =.group), col="red") +
labs(y="Schwarz: Prozentualer Befall\nRot: Adjustierter, rücktransformierter Mittelwert ± 95% Konfidenzintervall", x="Sorte",
caption="Mittelwerte, die mit einem gemeinsamen Buchstaben versehen sind, sind laut Tukey-test nicht signifikant voneinander verschieden.")
# emmeans
means <- emmeans(mod, pairwise ~ Sorte, type="response")
means <- multcomp::cld(means$emmeans, details=TRUE, Letters=letters)$emmeans
means
load(file="D:/RKurse/MyDatasets/ifz - 1F met rcbd binom.rda")
library(glmmTMB)
library(emmeans)
library(ggplot2)
str(ifz)
# Modell: 1F MET with RCBD für Prozentzahl
mod <- glmmTMB(y/m ~ Sorte + (1|Ort) + (1|Block:Ort) + (1|Sorte:Ort),
weights= m,
family = binomial(link='logit'),
data   = ifz,
REML   = FALSE)
summary(mod)
sigma(mod)
# Analysis of Deviance
Anova(mod, type="III") # Wald Test
# emmeans
means <- emmeans(mod, pairwise ~ Sorte, type="response")
means <- multcomp::cld(means$emmeans, details=TRUE, Letters=letters)$emmeans
ggplot() + theme_classic() +
# Rohdaten (ifz)
geom_boxplot(data=ifz, aes(x=Sorte, y=(y/m)), outlier.shape=NA, width=0.6) +
geom_jitter(data=ifz, aes(x=Sorte, y=(y/m)), width=0.25, height=0, shape=1) +
# Ergebnisse (means)
geom_point(data=means, aes(x=as.numeric(Sorte)+0.4, y=prob     ), col="red", shape=16, size=2) +
geom_errorbar(data=means, aes(x=as.numeric(Sorte)+0.4, ymin=lower.CL, ymax=upper.CL), col="red", width=0.1) +
geom_text(data=means, aes(x=as.numeric(Sorte)+0.5, y=prob     , label =.group), col="red") +
labs(y="Schwarz: Prozentualer Befall\nRot: Adjustierter, rücktransformierter Mittelwert ± 95% Konfidenzintervall", x="Sorte",
caption="Mittelwerte, die mit einem gemeinsamen Buchstaben versehen sind, sind laut Tukey-test nicht signifikant voneinander verschieden.")
setwd("D:/RKurse/Dokumentation/crashcouRse")
library("rmarkdown")
rmarkdown::clean_site()  # delete old files
rmarkdown::render_site(encoding="UTF-8") # render all files new; UTF-8 for ä, ö, ü, ß
{
library(stringr); library(knitr)
filenames <- list.files(pattern=".Rmd")
dont <- str_detect(filenames, paste(c("appendix", "kontakt", "index"), collapse="|"))
filenames <- filenames[!dont]
site.wd <- getwd()
setwd("D:/RKurse/Dokumentation/Vorführung")
for (i in 1:length(filenames)){
purl(paste0(site.wd,"/",filenames[i]))
print(filenames[i])
}
setwd(site.wd)
} # tranlsate website to R codes as well
