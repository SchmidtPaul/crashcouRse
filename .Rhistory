anova(mod, test="Chisq")
anova(mod)
anova(mod, test="Chisq")
anova(mod, test="Wald")
car::Anova(mod, test.statistic="Wald")
autoplot(mod)[1:2] # Residuenplots
autoplot(mod)
{
Input = ("
Instruction        Student  Month   Calories.per.day
'Curriculum A'     a        1       2000
'Curriculum A'     a        2       1978
'Curriculum A'     a        3       1962
'Curriculum A'     a        4       1873
'Curriculum A'     a        5       1782
'Curriculum A'     a        6       1737
'Curriculum A'     b        1       1900
'Curriculum A'     b        2       1826
'Curriculum A'     b        3       1782
'Curriculum A'     b        4       1718
'Curriculum A'     b        5       1639
'Curriculum A'     b        6       1644
'Curriculum A'     c        1       2100
'Curriculum A'     c        2       2067
'Curriculum A'     c        3       2065
'Curriculum A'     c        4       2015
'Curriculum A'     c        5       1994
'Curriculum A'     c        6       1919
'Curriculum A'     d        1       2000
'Curriculum A'     d        2       1981
'Curriculum A'     d        3       1987
'Curriculum A'     d        4       2016
'Curriculum A'     d        5       2010
'Curriculum A'     d        6       1946
'Curriculum B'     e        1       2100
'Curriculum B'     e        2       2004
'Curriculum B'     e        3       2027
'Curriculum B'     e        4       2109
'Curriculum B'     e        5       2197
'Curriculum B'     e        6       2294
'Curriculum B'     f        1       2000
'Curriculum B'     f        2       2011
'Curriculum B'     f        3       2089
'Curriculum B'     f        4       2124
'Curriculum B'     f        5       2199
'Curriculum B'     f        6       2234
'Curriculum B'     g        1       2000
'Curriculum B'     g        2       2074
'Curriculum B'     g        3       2141
'Curriculum B'     g        4       2199
'Curriculum B'     g        5       2265
'Curriculum B'     g        6       2254
'Curriculum B'     h        1       2000
'Curriculum B'     h        2       1970
'Curriculum B'     h        3       1951
'Curriculum B'     h        4       1981
'Curriculum B'     h        5       1987
'Curriculum B'     h        6       1969
'Curriculum C'     i        1       1950
'Curriculum C'     i        2       2007
'Curriculum C'     i        3       1978
'Curriculum C'     i        4       1965
'Curriculum C'     i        5       1984
'Curriculum C'     i        6       2020
'Curriculum C'     j        1       2000
'Curriculum C'     j        2       2029
'Curriculum C'     j        3       2033
'Curriculum C'     j        4       2050
'Curriculum C'     j        5       2001
'Curriculum C'     j        6       1988
'Curriculum C'     k        1       2000
'Curriculum C'     k        2       1976
'Curriculum C'     k        3       2025
'Curriculum C'     k        4       2047
'Curriculum C'     k        5       2033
'Curriculum C'     k        6       1984
'Curriculum C'     l        1       2000
'Curriculum C'     l        2       2020
'Curriculum C'     l        3       2009
'Curriculum C'     l        4       2017
'Curriculum C'     l        5       1989
'Curriculum C'     l        6       2020
")
Data = read.table(textConnection(Input),header=TRUE)
Data$Instruction = factor(Data$Instruction,
levels=unique(Data$Instruction))
}
library(data.table)
fwrite(Data, sep="\t", "D:/RKurse/Dokumentation/crashcouRse/datasets/calories repeated.txt")
save(Data,        file="D:/RKurse/Dokumentation/crashcouRse/datasets/calories repeated.rda")
dat <- as.data.table(Data)
# Deskriptive
print(dat, nrows=10)
summary(dat)
dat <- as.data.table(Data)
# Deskriptive
print(dat, nrows=10)
summary(dat)
plot(y=dat$Calories.per.day, x=dat$Month, col=dat$Instruction)
# Auswertung Ã¼ber Wochen hinweg
library(nlme)
mod.ar1 <- lme(Calories.per.day ~ Instruction + Month + Instruction:Month,
random = ~1|Student,
correlation = corAR1(form = ~ Month | Student),
data=Data,
method="REML")
car::Anova(mod.ar1, type="III")
car::Anova(mod.ar1, test.statistic="F", type="III")
car::Anova(mod.ar1)
mod.ar1 <- lme(Calories.per.day ~ Instruction + Month + Instruction:Month,
random = ~1|Student,
correlation = corAR1(form = ~ Month | Student),
data=Data,
method="REML")
gmod <- glmmTMB(Calories.per.day ~ Instruction + Month + Instruction:Month + (Month+0|Student),
data = Data)
str(Data)
AIC(gmod)
AIC(mod.ar1)
gmod <- glmmTMB(Calories.per.day ~ Instruction + Month + Instruction:Month + ar1(Month+0|Student),
data = Data)
library(glmmTMB)
data("Salamanders")
Sala <- Salamanders
Sala
Sala <- Salamanders %>% data.table
Sala
Sala <- Salamanders %>% data.table
library(dplyr)
Sala <- Salamanders %>% data.table
Sala
zipm3 = glmmTMB(count~spp * mined + (1|site),
zi=~spp * mined,
data=Sala,
family="poisson")
zipm3
plot(Sala$count)
plot(sort(Sala$count))
table(Sala$count)
plottable(Sala$count))
plot(table(Sala$count))
zipm3 = glmmTMB(count ~ spp * mined + ar1(1|site),
zi= ~ spp * mined,
data  = Sala,
family= "poisson")
zipm3 = glmmTMB(count ~ spp * mined + id(1|site),
zi= ~ spp * mined,
data  = Sala,
family= "poisson")
library(data.table)
library(dplyr)
library(readxl)
raw <- read_excel("D:/RKurse/MyDatasets/MuhammadMET/out.to.stage2.xlsx",
sheet="Sheet1")
raw <- raw %>%
select(year, loc, region, geno, mean) %>%
mutate(Ort    = as.factor(loc),
Jahr   = as.factor(as.numeric(year)-12),
Sorte  = as.factor(paste0("Sorte",as.numeric(as.factor(geno)))),
Region = as.factor(paste0("Region",as.numeric(as.factor(region)))),
Ertrag = (mean*1.1)-22.3)
library(maps)
data(world.cities);
citylist <- world.cities %>% arrange(-pop) %>% pull(name)
levels(raw$Ort) <- citylist[1:length(levels(raw$Ort))]
dat <- raw %>%
select(Jahr, Ort, Sorte, Region, Ertrag)
dat
dat <- raw %>%
select(Jahr, Ort, Sorte, Region, Ertrag) %>%
data.table
dat
str(dat)
library(data.table)
library(dplyr)
library(readxl)
raw <- read_excel("D:/RKurse/MyDatasets/MuhammadMET/out.to.stage2.xlsx",
sheet="Sheet1")
raw <- raw %>%
select(year, loc, region, geno, mean) %>%
mutate(Ort    = as.factor(loc),
Jahr   = as.factor(as.numeric(year)-12),
Sorte  = as.factor(paste0("Sorte",as.numeric(as.factor(geno)))),
Region = as.factor(paste0("Region",as.numeric(as.factor(region)))),
Ertrag = (mean*1.1)-22.3)
library(maps)
data(world.cities);
citylist <- world.cities %>% arrange(-pop) %>% pull(name)
levels(raw$Ort) <- citylist[1:length(levels(raw$Ort))]
MET <- raw %>%
select(Jahr, Ort, Sorte, Region, Ertrag) %>%
data.table
fwrite(MET, sep="\t", "D:/RKurse/MyDatasets/MuhammadMET/MET.txt")
save(MET,        file="D:/RKurse/MyDatasets/MuhammadMET/MET.rda")
load("D:/RKurse/MyDatasets/MuhammadMET/MET.rda")
library(data.table)
library(dplyr)
load("D:/RKurse/MyDatasets/MuhammadMET/MET.rda")
table(loc)
MET %>% select(Ort) %>% data.table
MET %>% select(Ort) %>% table %>% data.table
MET %>% select(Ort, Jahr) %>% table %>% data.table
MET %>% select(Ort, Jahr) %>% table
MET %>% select(Ort, Region) %>% table
MET %>% select(Ort, Region) %>% table %>% data.ta
MET %>% select(Ort, Region) %>% table %>% data.table()
MET %>% select(Ort, Region) %>% table %>% data.table %>% filter(N>0)
MET %>% select(Ort, Region) %>% table %>%
data.table %>% filter(N>0) %>% arrange(-Region, -N)
MET %>% select(Ort, Region) %>% table %>%
data.table %>% filter(N>0) %>% arrange(c(-Region, -N))
MET %>% select(Ort, Region) %>% table %>%
data.table %>% filter(N>0) %>% arrange(c(-Region))
MET %>% select(Ort, Region) %>% table %>%
data.table %>% filter(N>0) %>% arrange(-Region)
MET %>% select(Ort, Region) %>% table %>%
data.table %>% filter(N>0) %>% arrange(Region)
MET %>% select(Ort, Region) %>% count
MET %>% select(Ort, Region) %>% table %>%
data.table %>% filter(N>0) %>% arrange(Region)
plot(sort(MET$Ertrag))
plot(sort(MET$Ertrag), color=Ort)
plot(sort(MET$Ertrag), color=MET$Ort)
plot(sort(MET$Ertrag))
library(ggplot2)
ggplot(data=MET, aes(y=Ertrag, x=Jahr, color=Ort)) +
geom_jitter()
ggplot(data=MET, aes(y=Ertrag, x=Ort, color=Jahr)) +
geom_jitter()
ggplot(data=MET, aes(y=Ertrag, x=Ort, color=Jahr)) +
geom_boxplot()
ggplot(data=MET, aes(y=Ertrag, x=Ort, color=Jahr)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 90))
ggplot(data=MET, aes(y=Ertrag, x=Ort)) +
geom_boxplot() +
theme(axis.text.x = element_text(angle = 90))
ggplot(data=MET, aes(y=Ertrag, x=Ort)) +
geom_boxplot() +
geom_point(color=Jahr) +
theme(axis.text.x = element_text(angle = 90))
ggplot(data=MET, aes(y=Ertrag, x=Ort)) +
geom_boxplot() +
geom_point(aes(color=Jahr)) +
theme(axis.text.x = element_text(angle = 90))
ggplot(data=MET, aes(y=Ertrag, x=Ort)) +
geom_point(aes(color=Jahr)) +
geom_boxplot(alpha=0.5) +
theme(axis.text.x = element_text(angle = 90))
ggplot(data=MET, aes(y=Ertrag, x=Ort)) +
geom_point(aes(color=Jahr)) +
geom_boxplot(alpha=0.5) +
theme(axis.text.x = element_text(angle = 90),
legend.position = "top")
ggplot(data=MET, aes(y=Ertrag, x=Ort)) +
geom_point(aes(color=Region)) +
geom_boxplot(alpha=0.5) +
theme(axis.text.x = element_text(angle = 90),
legend.position = "top")
MET %>% select(Region) %>% table
MET %>% select(Region) %>% table %>% data.table %>% arrange(-N)
MET %>% select(Ort, Jahr) %>% table
MET %>% select(Ort, Jahr) %>% unique %>% table
MET %>% select(Ort, Region) %>% unique %>% table %>% data.table %>% arrange(-N)
MET %>% select(Ort, Region) %>% unique %>% table %>% data.table
MET %>% select(Ort, Region) %>% unique %>%
table %>% data.table %>% filter(N>0) %>% arrange(-N)
MET %>% select(Region) %>% unique %>%
table %>% data.table %>% filter(N>0) %>% arrange(-N)
MET %>% select(Ort, Region) %>% unique
MET %>% select(Ort, Region) %>% unique %>%
select(Region) %>% table %>% data.table %>% arrange(-N)
MET %>% select(Ort, Region) %>% unique %>%
select(Region) %>% table %>% data.table %>% arrange(-N) %>%
filter(N>4)
MET %>% select(Ort, Region) %>% unique %>%
select(Region) %>% table %>% data.table %>% arrange(-N) %>%
filter(N>4) %>% select(-N) %>% pull
Regions <- MET %>% select(Ort, Region) %>% unique %>%
select(Region) %>% table %>% data.table %>% arrange(-N) %>%
filter(N>4) %>% select(-N) %>% pull
?n_distinct
MET %>% select(Ort, Region) %>% unique %>%
select(Region) %>% n_distinct
Regions <- MET %>% select(Ort, Region) %>% unique %>%
select(Region) %>% table %>% data.table %>%
arrange(-N) %>% filter(N>4) %>% select(-N) %>% pull
METsub <- MET %>% filter(Region %in% Regions)
ggplot(data=MET, aes(y=Ertrag, x=Ort)) +
geom_point(aes(color=Region)) +
geom_boxplot(alpha=0.5) +
theme(axis.text.x = element_text(angle = 90),
legend.position = "top")
ggplot(data=METsub, aes(y=Ertrag, x=Ort)) +
geom_point(aes(color=Region)) +
geom_boxplot(alpha=0.5) +
theme(axis.text.x = element_text(angle = 90),
legend.position = "top")
library(glmmTMB)
glmmTMB(Ertrag ~ (1|Sorte) + (1|Ort) + (1|Jahr),
data=METsub
)
glmmTMB(Ertrag ~ (1|Sorte) + (1|Ort) + (1|Jahr) +
(1|Sorte:Ort) + (1|Sorte:Jahr) + (1|Jahr:Ort),
data=METsub)
glmmTMB(Ertrag ~ Region + (Region+0|Sorte) + (1|Ort) + (1|Jahr) +
(1|Sorte:Ort) + (1|Sorte:Jahr) + (1|Jahr:Ort),
data=METsub)
glmmTMB(Ertrag ~ Region + cs(Region+0|Sorte) + (1|Ort) + (1|Jahr) +
,
data=METsub)
glmmTMB(Ertrag ~ Region + cs(Region+0|Sorte) + (1|Ort) + (1|Jahr),
data=METsub)
glmmTMB(Ertrag ~ Region + cs(Region|Sorte) + (1|Ort) + (1|Jahr),
data=METsub)
glmmTMB(Ertrag ~ Region + cs(Sorte|Region) + (1|Ort) + (1|Jahr),
data=METsub)
glmmTMB(Ertrag ~ Region + cs(Sorte|Region) + (1|Ort:Region) + (1|Jahr),
data=METsub)
glmmTMB(Ertrag ~ Region + us(Sorte|Region) + (1|Ort:Region) + (1|Jahr),
data=METsub)
glmmTMB(Ertrag ~ Region + cs(Sorte|Region) + (1|Ort:Region) + (1|Jahr),
data=METsub)
glmmTMB(Ertrag ~ Region + cs(Sorte|Region) + (1|Ort:Region) + (1|Jahr) +
(1|Sorte:Ort:Region) + (1|Sorte:Jahr) + (1|Jahr:Region) +
(1|Sorte:Jahr:Region),
data=METsub)
glmmTMB(Ertrag ~ Region + cs(1|Sorte:Region) + (1|Ort:Region) + (1|Jahr) +
(1|Sorte:Ort:Region) + (1|Sorte:Jahr) + (1|Jahr:Region) +
(1|Sorte:Jahr:Region),
data=METsub)
glmmTMB(Ertrag ~ Region + id(1|Sorte:Region) + (1|Ort:Region) + (1|Jahr) +
(1|Sorte:Ort:Region) + (1|Sorte:Jahr) + (1|Jahr:Region) +
(1|Sorte:Jahr:Region),
data=METsub)
glmmTMB(Ertrag ~ Region + iid(1|Sorte:Region) + (1|Ort:Region) + (1|Jahr) +
(1|Sorte:Ort:Region) + (1|Sorte:Jahr) + (1|Jahr:Region) +
(1|Sorte:Jahr:Region),
data=METsub)
glmmTMB(Ertrag ~ Region + (1|Sorte:Region) + (1|Ort:Region) + (1|Jahr) +
(1|Sorte:Ort:Region) + (1|Sorte:Jahr) + (1|Jahr:Region) +
(1|Sorte:Jahr:Region),
data=METsub)
glmmTMB(Ertrag ~ Region + diag(1|Sorte:Region) + (1|Ort:Region) + (1|Jahr) +
(1|Sorte:Ort:Region) + (1|Sorte:Jahr) + (1|Jahr:Region) +
(1|Sorte:Jahr:Region),
data=METsub)
glmmTMB(Ertrag ~ Region + cs(1|Sorte:Region) + (1|Ort:Region) + (1|Jahr) +
(1|Sorte:Ort:Region) + (1|Sorte:Jahr) + (1|Jahr:Region) +
(1|Sorte:Jahr:Region),
data=METsub)
glmmTMB(Ertrag ~ Region + diag(Sorte|Region) + (1|Ort:Region) + (1|Jahr) +
(1|Sorte:Ort:Region) + (1|Sorte:Jahr) + (1|Jahr:Region) +
(1|Sorte:Jahr:Region),
data=METsub)
glmmTMB(Ertrag ~ Region + (1|Sorte:Region) + (1|Ort:Region) + (1|Jahr) +
(1|Sorte:Ort:Region) + (1|Sorte:Jahr) + (1|Jahr:Region) +
(1|Sorte:Jahr:Region),
data=METsub)
glmmTMB(Ertrag ~ (1|Sorte) + (1|Ort) + (1|Jahr) +
(1|Sorte:Ort) + (1|Sorte:Jahr) + (1|Jahr:Ort),
data=METsub)
glmmTMB(Ertrag ~ Region + diag(1|Sorte:Region) + (1|Ort:Region) + (1|Jahr) +
(1|Sorte:Ort:Region) + (1|Sorte:Jahr) + (1|Jahr:Region) +
(1|Sorte:Jahr:Region),
data=METsub)
glmmTMB(Ertrag ~ Region + diag(1|Sorte:Region) ,
data=METsub)
mod <- glmmTMB(Ertrag ~ Region + diag(1|Sorte:Region) + (1|Ort) + (1|Jahr),
data=METsub)
mod$modelInfo$reStruc
mod$modelInfo$grpVar
mod$modelInfo$family
mod$modelInfo$allForm
mod$fit$par
mod$fit$parfull
mod$sdr$cov
mod$sdr$sd
mod$sdr$diag.cov.random
mod$sdr$par.random
mod$frame
mod$fitted
VarCorr(mod, sigma = 1)
VarCorr(mod)
VarCorr(mod)
VarCorr(fm4)[[c("cond","Sorte:Region")]]
VarCorr(mod)[[c("cond","Sorte:Region")]]
x <- VarCorr(mod)
x$cond
mod <- glmmTMB(Ertrag ~ Region + diag(Sorte+0|Region) + (1|Ort) + (1|Jahr),
data=METsub)
mod <- glmmTMB(Ertrag ~ Region + diag(Sorte|Region) + (1|Ort) + (1|Jahr),
data=METsub)
mod <- glmmTMB(Ertrag ~ Region + diag(1|Region) + (1|Ort) + (1|Jahr),
data=METsub)
mod <- glmmTMB(Ertrag ~ Region + diag(Sorte|Region) + (1|Ort) + (1|Jahr),
data=METsub)
x <- VarCorr(mod)
x$cond
mod <- glmmTMB(Ertrag ~ Region + diag(Region|Sorte) + (1|Ort) + (1|Jahr),
data=METsub)
x <- VarCorr(mod)
x$cond
mod <- glmmTMB(Ertrag ~ Region + diag(0+Region|Sorte) + (1|Ort) + (1|Jahr),
data=METsub)
x <- VarCorr(mod)
x$cond
VarCorr(mod)$cond$Sorte
mod <- glmmTMB(Ertrag ~ Region + cs(0+Region|Sorte) + (1|Ort) + (1|Jahr),
data=METsub)
VarCorr(mod)$cond$Sorte
mod <- glmmTMB(Ertrag ~ Region + cs(0+Region|Sorte) + (1|Ort) + (1|Jahr) +
(1|Jahr:Ort),
data=METsub)
VarCorr(mod)$cond$Sorte
mod <- glmmTMB(Ertrag ~ Region + cs(0+Region|Sorte) + (1|Ort) + (1|Jahr) +
(1|Jahr:Ort),
data=METsub)
VarCorr(mod)$cond$Sorte
VarCorr(mod)
mod <- glmmTMB(Ertrag ~ Region + cs(0+Region|Sorte) + (1|Ort) + (1|Jahr) +
(1|Jahr:Ort) + 1|Sorte:Ort) + (1|Sorte:Jahr),
data=METsub)
mod <- glmmTMB(Ertrag ~ Region + cs(0+Region|Sorte) + (1|Ort) + (1|Jahr) +
(1|Jahr:Ort) + 1|Sorte:Ort) + (1|Sorte:Jahr),
data=METsub)
mod <- glmmTMB(Ertrag ~ Region + cs(0+Region|Sorte) + (1|Ort) + (1|Jahr) +
(1|Jahr:Ort) + (1|Sorte:Ort) + (1|Sorte:Jahr),
data=METsub)
VarCorr(mod)$cond$Sorte
VarCorr(mod)
AIC(mod)
library(data.table)
library(dplyr)
library(readxl)
raw <- read_excel("D:/RKurse/MyDatasets/MuhammadMET/out.to.stage2.xlsx",
sheet="Sheet1")
raw
library(data.table)
library(dplyr)
library(ggplot2)
load("D:/RKurse/MyDatasets/MuhammadMET/MET.rda")
MET %>% select(Ort, Jahr) %>% table
VarCorr(mod, comp = "Var")
VarCorr(mod, order = "Var")
VarCorr(mod, vcov)
VarCorr(mod, vcov=TRUE)
mod$fit$par
mod$obj$par
mod$contrasts
mod$sdr$par.fixed
summary(mod)
x <- summary(mod)
x$coefficients
mod$coefficients$cond
summary(mod)$coefficients$cond
mod$fit$
coeff(mod)
mod$fit$
coef(mod)
mod$fit$
coef(mod)
mod
mod$fitted
mod$fit$
mod$fitted
mod$fit$
mod$fitted
ss
mod$fit$
mod$fitted
mod$fit$
mod
)
mod$fit$
mod
mod$fit$
mod$fitted
))
()
2+2
mod$fit$
mod$fitted
mod <- glmmTMB(Ertrag ~ Region + cs(0+Region|Sorte) + (1|Ort) + (1|Jahr) +
(1|Jahr:Ort) + (1|Sorte:Ort) + (1|Sorte:Jahr),
data=METsub)
mod$fit$
mod$fitted
mod$fitted
mod <- glmmTMB(Ertrag ~ Region + cs(0+Region|Sorte) + (1|Ort:Region) + (1|Jahr) +
(1|Jahr:Ort:Region) + (1|Sorte:Ort:Region) + (1|Sorte:Jahr),
data=METsub)
AIC(mod)
VarCorr(mod)$cond$Sorte
VarCorr(mod, vcov=TRUE)
setwd("D:/RKurse/Dokumentation/crashcouRse")
library("rmarkdown")
rmarkdown::clean_site()  # delete old files
rmarkdown::render_site(encoding="UTF-8") # render all files new; UTF-8 for Ã¤, Ã¶, Ã¼, Ã
{
library(stringr); library(knitr)
filenames <- list.files(pattern=".Rmd")
dont <- str_detect(filenames, paste(c("appendix", "kontakt", "index"), collapse="|"))
filenames <- filenames[!dont]
site.wd <- getwd()
setwd("D:/RKurse/Dokumentation/VorfÃ¼hrung")
for (i in 1:length(filenames)){
purl(paste0(site.wd,"/",filenames[i]))
print(filenames[i])
}
setwd(site.wd)
} # tranlsate website to R codes as well
